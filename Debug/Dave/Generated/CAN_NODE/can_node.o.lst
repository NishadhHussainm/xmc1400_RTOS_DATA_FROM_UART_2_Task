   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "can_node.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_CAN_NODE_SetEventNodePointer,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_CAN_NODE_SetEventNodePointer:
  23              	.LFB65:
  24              	 .file 1 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
   7:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.
  11:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  12:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  14:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * do so, all subject to the following:
  20:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  21:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * a source language processor.
  27:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  28:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * at XMCSupport@infineon.com.
  39:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
  40:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  41:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  42:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  43:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  44:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  45:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  46:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  47:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  49:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  50:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  51:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  52:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  53:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  54:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  55:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  56:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  57:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  58:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  59:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  60:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  61:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  62:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  64:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  65:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  66:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  67:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  68:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  69:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  70:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  71:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  72:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  73:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  74:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  75:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  76:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  77:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  78:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  79:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  80:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  81:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  82:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  83:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  84:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
  85:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  86:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  87:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  88:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  89:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  90:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  91:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  92:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  93:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  94:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  95:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  96:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  97:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  98:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  99:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
 101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
 102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
 103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes.
 133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between
 135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure().
 153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions
 158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent().
 160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF = CAN_NODE_NSR_BOFF_Msk,              /**< Bus-off status */
 342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE = CAN_NODE_NCR_CCE_Msk,    /**< Configuration change enab
 361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator
 459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #else
 466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #else
 470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;     /**< Frequency of the CAN module(fCAN). \a can_frequency shall be ran
 483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                                    the synchronization segment. Sample point. Range = [0, 10000] wi
 486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #pragma push
 529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #pragma anon_unions
 530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning 586
 532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   union
 543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   {
 544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     struct
 545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     {
 546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection: 3;  /**<   Defines function of the frame counter  */
 548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode: 2;     /**<   Determines the operation mode of the frame count
 549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     };
 551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   };
 554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** */
 559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   union
 568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   {
 569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     struct
 570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     {
 571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier: 29;           /**< standard (11 bit)/Extended (29 bit) message ident
 572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode: 1;               /**< Standard/Extended identifier support */
 573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority: 2;              /**< Arbitration Mode/Priority */
 574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     };
 575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   };
 577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   union
 578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   {
 579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     struct
 580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     {
 581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask: 29;             /**< CAN Identifier of Message Object */
 582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask: 1;             /**< Identifier Extension Bit of Message Object */
 583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     };
 584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   };
 586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   union
 589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   {
 590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     uint64_t can_data_long;                   /** Data of the Message Object*/
 596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   };
 597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #pragma pop
 604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning restore
 606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 704:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 705:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 706:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 707:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 709:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 710:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 712:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 713:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 714:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_PANCMD_t pancmd,
 715:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg1,
 716:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg2)
 717:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 718:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 719:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 720:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 721:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 722:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 723:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 724:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 727:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 728:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 730:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 731:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 733:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 734:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 735:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 736:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 737:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 739:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 740:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 741:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 742:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 743:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGE
 744:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 745:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 746:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 747:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 748:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 749:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 750:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 752:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 753:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 755:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN).
 756:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 757:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 758:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 759:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 760:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 761:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 762:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 764:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN.
 765:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 766:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 767:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 768:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 769:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 770:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 771:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 773:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 774:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 775:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 776:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 777:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 778:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 779:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 780:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 781:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 782:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 783:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 785:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 786:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 787:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 788:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 789:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 791:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 792:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 793:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 794:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 796:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 797:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 798:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source);
 799:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 800:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 801:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 802:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 803:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 804:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency
 805:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 807:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 808:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 810:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 811:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 812:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 813:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 814:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency
 816:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 818:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 819:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 821:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 822:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 823:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 824:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 825:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 827:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 828:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 829:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 830:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 831:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 832:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 834:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 836:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 837:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 838:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 839:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 840:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 841:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 844:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 847:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #else
 848:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 849:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
 850:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 851:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 852:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 854:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 855:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 856:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 857:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 858:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 859:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 860:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 866:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 867:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 868:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 869:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 870:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 872:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 873:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 874:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 876:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 878:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 879:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 880:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 881:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
 882:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 884:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 885:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 886:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 887:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
 888:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
  25              	 .loc 1 888 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 84B0     	 sub sp,sp,#16
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 24
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 F860     	 str r0,[r7,#12]
  39 0008 7A60     	 str r2,[r7,#4]
  40 000a 0B23     	 mov r3,#11
  41 000c FB18     	 add r3,r7,r3
  42 000e 0A1C     	 add r2,r1,#0
  43 0010 1A70     	 strb r2,[r3]
 889:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
  44              	 .loc 1 889 0
  45 0012 FB68     	 ldr r3,[r7,#12]
  46 0014 9B68     	 ldr r3,[r3,#8]
  47 0016 0B22     	 mov r2,#11
  48 0018 BA18     	 add r2,r7,r2
  49 001a 1278     	 ldrb r2,[r2]
  50 001c 0721     	 mov r1,#7
  51 001e 9140     	 lsl r1,r1,r2
  52 0020 0A1C     	 mov r2,r1
  53 0022 D243     	 mvn r2,r2
  54 0024 1A40     	 and r2,r3
  55 0026 0B23     	 mov r3,#11
  56 0028 FB18     	 add r3,r7,r3
  57 002a 1B78     	 ldrb r3,[r3]
  58 002c 7968     	 ldr r1,[r7,#4]
  59 002e 9940     	 lsl r1,r1,r3
  60 0030 0B1C     	 mov r3,r1
  61 0032 1A43     	 orr r2,r3
  62 0034 FB68     	 ldr r3,[r7,#12]
  63 0036 9A60     	 str r2,[r3,#8]
 890:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
  64              	 .loc 1 890 0
  65 0038 BD46     	 mov sp,r7
  66 003a 04B0     	 add sp,sp,#16
  67              	 
  68 003c 80BD     	 pop {r7,pc}
  69              	 .cfi_endproc
  70              	.LFE65:
  72 003e C046     	 .section .text.XMC_CAN_NODE_SetReceiveInput,"ax",%progbits
  73              	 .align 2
  74              	 .code 16
  75              	 .thumb_func
  77              	XMC_CAN_NODE_SetReceiveInput:
  78              	.LFB66:
 891:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 892:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 893:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 894:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 896:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 897:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 899:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 900:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 901:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 902:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 903:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 905:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
 906:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 908:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 909:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 910:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 911:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 912:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 913:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 914:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 915:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 917:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate.
 920:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 921:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 922:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 923:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 924:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 925:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 927:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 928:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 930:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 931:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 932:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 933:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 934:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 935:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 936:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 938:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 940:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 941:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 942:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 943:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 944:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 946:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
 947:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 948:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 949:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 950:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 952:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 953:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 954:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 955:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
  79              	 .loc 1 955 0
  80              	 .cfi_startproc
  81 0000 80B5     	 push {r7,lr}
  82              	.LCFI3:
  83              	 .cfi_def_cfa_offset 8
  84              	 .cfi_offset 7,-8
  85              	 .cfi_offset 14,-4
  86 0002 82B0     	 sub sp,sp,#8
  87              	.LCFI4:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI5:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
  93 0008 0A1C     	 mov r2,r1
  94 000a FB1C     	 add r3,r7,#3
  95 000c 1A70     	 strb r2,[r3]
 956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
  96              	 .loc 1 956 0
  97 000e 7B68     	 ldr r3,[r7,#4]
  98 0010 DB68     	 ldr r3,[r3,#12]
  99 0012 0722     	 mov r2,#7
 100 0014 9343     	 bic r3,r2
 101 0016 1A1C     	 mov r2,r3
 957:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 102              	 .loc 1 957 0
 103 0018 FB1C     	 add r3,r7,#3
 104 001a 1B78     	 ldrb r3,[r3]
 105 001c 0721     	 mov r1,#7
 106 001e 0B40     	 and r3,r1
 956:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 107              	 .loc 1 956 0
 108 0020 1A43     	 orr r2,r3
 109 0022 7B68     	 ldr r3,[r7,#4]
 110 0024 DA60     	 str r2,[r3,#12]
 958:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 111              	 .loc 1 958 0
 112 0026 BD46     	 mov sp,r7
 113 0028 02B0     	 add sp,sp,#8
 114              	 
 115 002a 80BD     	 pop {r7,pc}
 116              	 .cfi_endproc
 117              	.LFE66:
 119              	 .section .text.XMC_CAN_NODE_EnableLoopBack,"ax",%progbits
 120              	 .align 2
 121              	 .code 16
 122              	 .thumb_func
 124              	XMC_CAN_NODE_EnableLoopBack:
 125              	.LFB67:
 959:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 960:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 961:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 962:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 963:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 965:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 967:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 968:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 969:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 970:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 971:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 972:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 974:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 975:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 976:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 977:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 978:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 979:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
 980:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 981:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 982:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 126              	 .loc 1 982 0
 127              	 .cfi_startproc
 128 0000 80B5     	 push {r7,lr}
 129              	.LCFI6:
 130              	 .cfi_def_cfa_offset 8
 131              	 .cfi_offset 7,-8
 132              	 .cfi_offset 14,-4
 133 0002 82B0     	 sub sp,sp,#8
 134              	.LCFI7:
 135              	 .cfi_def_cfa_offset 16
 136 0004 00AF     	 add r7,sp,#0
 137              	.LCFI8:
 138              	 .cfi_def_cfa_register 7
 139 0006 7860     	 str r0,[r7,#4]
 983:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 140              	 .loc 1 983 0
 141 0008 7B68     	 ldr r3,[r7,#4]
 142 000a DB68     	 ldr r3,[r3,#12]
 143 000c 8022     	 mov r2,#128
 144 000e 5200     	 lsl r2,r2,#1
 145 0010 1A43     	 orr r2,r3
 146 0012 7B68     	 ldr r3,[r7,#4]
 147 0014 DA60     	 str r2,[r3,#12]
 984:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 148              	 .loc 1 984 0
 149 0016 BD46     	 mov sp,r7
 150 0018 02B0     	 add sp,sp,#8
 151              	 
 152 001a 80BD     	 pop {r7,pc}
 153              	 .cfi_endproc
 154              	.LFE67:
 156              	 .section .text.XMC_CAN_NODE_GetStatus,"ax",%progbits
 157              	 .align 2
 158              	 .code 16
 159              	 .thumb_func
 161              	XMC_CAN_NODE_GetStatus:
 162              	.LFB77:
 985:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 986:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
 988:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 989:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 991:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 993:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 994:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 995:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 996:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
 997:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 998:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 999:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1000:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1002:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
1003:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1005:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1006:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
1007:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1008:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
1009:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1010:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1011:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1012:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1022:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1025:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1028:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1030:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1031:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1034:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1035:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1036:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1038:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1039:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1040:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1041:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1044:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1045:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1046:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1047:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1048:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1049:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1050:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1051:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1053:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1054:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1055:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1056:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1057:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1058:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1059:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1060:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1061:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1063:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1064:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1065:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1066:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1067:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1068:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1069:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1070:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1071:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1072:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1073:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1074:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1075:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1077:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1078:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1079:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1080:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1081:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1083:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1084:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1085:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1086:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk) >> CAN_NODE_NEC
1087:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1088:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1089:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1090:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1091:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1093:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1094:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1096:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1098:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1099:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1100:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1101:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1102:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1103:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1105:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1106:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1107:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1108:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1109:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1110:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1111:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1112:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1113:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1114:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1115:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1116:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1117:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1119:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1120:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1122:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1124:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1125:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1126:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1127:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1128:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1129:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1130:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1131:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1132:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1134:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1135:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1136:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1137:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1138:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1139:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1140:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1141:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1142:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1144:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1146:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1147:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1149:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1150:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1151:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1152:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1153:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1156:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1157:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1158:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1159:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1161:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1162:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1163:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1164:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1165:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_M
1166:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1167:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1168:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1169:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1170:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1171:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1172:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1173:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1174:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1175:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1176:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1177:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1178:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1179:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1181:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1182:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1183:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1184:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1185:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1186:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1187:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EW
1188:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1189:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1190:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1191:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1192:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1194:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1195:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1196:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1198:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1199:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1200:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1201:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1202:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1203:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1204:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1205:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1206:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1207:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1209:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1210:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1211:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1212:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1213:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1214:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1215:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1216:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1217:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1218:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1219:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1220:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1221:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1222:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1223:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1224:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1225:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1226:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1227:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1229:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1230:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1231:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1232:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1233:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1234:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1235:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1236:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1240:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1241:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1242:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1243:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1244:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1246:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1247:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1249:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1250:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1251:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 163              	 .loc 1 1251 0
 164              	 .cfi_startproc
 165 0000 80B5     	 push {r7,lr}
 166              	.LCFI9:
 167              	 .cfi_def_cfa_offset 8
 168              	 .cfi_offset 7,-8
 169              	 .cfi_offset 14,-4
 170 0002 82B0     	 sub sp,sp,#8
 171              	.LCFI10:
 172              	 .cfi_def_cfa_offset 16
 173 0004 00AF     	 add r7,sp,#0
 174              	.LCFI11:
 175              	 .cfi_def_cfa_register 7
 176 0006 7860     	 str r0,[r7,#4]
1252:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
 177              	 .loc 1 1252 0
 178 0008 7B68     	 ldr r3,[r7,#4]
 179 000a 5B68     	 ldr r3,[r3,#4]
1253:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 180              	 .loc 1 1253 0
 181 000c 181C     	 mov r0,r3
 182 000e BD46     	 mov sp,r7
 183 0010 02B0     	 add sp,sp,#8
 184              	 
 185 0012 80BD     	 pop {r7,pc}
 186              	 .cfi_endproc
 187              	.LFE77:
 189              	 .section .text.XMC_CAN_NODE_ClearStatus,"ax",%progbits
 190              	 .align 2
 191              	 .code 16
 192              	 .thumb_func
 194              	XMC_CAN_NODE_ClearStatus:
 195              	.LFB78:
1254:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1255:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1256:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1257:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1258:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1259:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1260:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1261:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1262:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1263:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1264:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1265:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1266:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1267:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1269:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1270:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t
1271:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 196              	 .loc 1 1271 0
 197              	 .cfi_startproc
 198 0000 80B5     	 push {r7,lr}
 199              	.LCFI12:
 200              	 .cfi_def_cfa_offset 8
 201              	 .cfi_offset 7,-8
 202              	 .cfi_offset 14,-4
 203 0002 82B0     	 sub sp,sp,#8
 204              	.LCFI13:
 205              	 .cfi_def_cfa_offset 16
 206 0004 00AF     	 add r7,sp,#0
 207              	.LCFI14:
 208              	 .cfi_def_cfa_register 7
 209 0006 7860     	 str r0,[r7,#4]
 210 0008 0A1C     	 mov r2,r1
 211 000a BB1C     	 add r3,r7,#2
 212 000c 1A80     	 strh r2,[r3]
1272:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NSR &= ~(uint32_t)can_node_status;
 213              	 .loc 1 1272 0
 214 000e 7B68     	 ldr r3,[r7,#4]
 215 0010 5B68     	 ldr r3,[r3,#4]
 216 0012 BA1C     	 add r2,r7,#2
 217 0014 1288     	 ldrh r2,[r2]
 218 0016 D243     	 mvn r2,r2
 219 0018 1A40     	 and r2,r3
 220 001a 7B68     	 ldr r3,[r7,#4]
 221 001c 5A60     	 str r2,[r3,#4]
1273:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 222              	 .loc 1 1273 0
 223 001e BD46     	 mov sp,r7
 224 0020 02B0     	 add sp,sp,#8
 225              	 
 226 0022 80BD     	 pop {r7,pc}
 227              	 .cfi_endproc
 228              	.LFE78:
 230              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 231              	 .align 2
 232              	 .code 16
 233              	 .thumb_func
 235              	XMC_CAN_NODE_EnableConfigurationChange:
 236              	.LFB79:
1274:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1275:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1276:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1277:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1278:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1279:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1281:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1283:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1284:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1285:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1286:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1287:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1288:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1290:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1291:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1292:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 237              	 .loc 1 1292 0
 238              	 .cfi_startproc
 239 0000 80B5     	 push {r7,lr}
 240              	.LCFI15:
 241              	 .cfi_def_cfa_offset 8
 242              	 .cfi_offset 7,-8
 243              	 .cfi_offset 14,-4
 244 0002 82B0     	 sub sp,sp,#8
 245              	.LCFI16:
 246              	 .cfi_def_cfa_offset 16
 247 0004 00AF     	 add r7,sp,#0
 248              	.LCFI17:
 249              	 .cfi_def_cfa_register 7
 250 0006 7860     	 str r0,[r7,#4]
1293:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 251              	 .loc 1 1293 0
 252 0008 7B68     	 ldr r3,[r7,#4]
 253 000a 1B68     	 ldr r3,[r3]
 254 000c 4022     	 mov r2,#64
 255 000e 1A43     	 orr r2,r3
 256 0010 7B68     	 ldr r3,[r7,#4]
 257 0012 1A60     	 str r2,[r3]
1294:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 258              	 .loc 1 1294 0
 259 0014 BD46     	 mov sp,r7
 260 0016 02B0     	 add sp,sp,#8
 261              	 
 262 0018 80BD     	 pop {r7,pc}
 263              	 .cfi_endproc
 264              	.LFE79:
 266 001a C046     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 267              	 .align 2
 268              	 .code 16
 269              	 .thumb_func
 271              	XMC_CAN_NODE_DisableConfigurationChange:
 272              	.LFB80:
1295:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1296:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1297:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1298:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1299:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1300:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1302:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1304:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1305:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1306:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1307:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1308:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1310:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1311:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1312:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 273              	 .loc 1 1312 0
 274              	 .cfi_startproc
 275 0000 80B5     	 push {r7,lr}
 276              	.LCFI18:
 277              	 .cfi_def_cfa_offset 8
 278              	 .cfi_offset 7,-8
 279              	 .cfi_offset 14,-4
 280 0002 82B0     	 sub sp,sp,#8
 281              	.LCFI19:
 282              	 .cfi_def_cfa_offset 16
 283 0004 00AF     	 add r7,sp,#0
 284              	.LCFI20:
 285              	 .cfi_def_cfa_register 7
 286 0006 7860     	 str r0,[r7,#4]
1313:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 287              	 .loc 1 1313 0
 288 0008 7B68     	 ldr r3,[r7,#4]
 289 000a 1B68     	 ldr r3,[r3]
 290 000c 4022     	 mov r2,#64
 291 000e 9343     	 bic r3,r2
 292 0010 1A1C     	 mov r2,r3
 293 0012 7B68     	 ldr r3,[r7,#4]
 294 0014 1A60     	 str r2,[r3]
1314:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 295              	 .loc 1 1314 0
 296 0016 BD46     	 mov sp,r7
 297 0018 02B0     	 add sp,sp,#8
 298              	 
 299 001a 80BD     	 pop {r7,pc}
 300              	 .cfi_endproc
 301              	.LFE80:
 303              	 .section .text.XMC_CAN_NODE_SetInitBit,"ax",%progbits
 304              	 .align 2
 305              	 .code 16
 306              	 .thumb_func
 308              	XMC_CAN_NODE_SetInitBit:
 309              	.LFB81:
1315:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1316:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1317:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1318:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1319:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1320:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1321:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1322:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1323:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1324:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1325:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Disable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node e
1326:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1327:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1328:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1329:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit()
1330:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1331:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1332:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1333:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetInitBit(XMC_CAN_NODE_t *const can_node)
1334:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 310              	 .loc 1 1334 0
 311              	 .cfi_startproc
 312 0000 80B5     	 push {r7,lr}
 313              	.LCFI21:
 314              	 .cfi_def_cfa_offset 8
 315              	 .cfi_offset 7,-8
 316              	 .cfi_offset 14,-4
 317 0002 82B0     	 sub sp,sp,#8
 318              	.LCFI22:
 319              	 .cfi_def_cfa_offset 16
 320 0004 00AF     	 add r7,sp,#0
 321              	.LCFI23:
 322              	 .cfi_def_cfa_register 7
 323 0006 7860     	 str r0,[r7,#4]
1335:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_INIT_Msk;
 324              	 .loc 1 1335 0
 325 0008 7B68     	 ldr r3,[r7,#4]
 326 000a 1B68     	 ldr r3,[r3]
 327 000c 0122     	 mov r2,#1
 328 000e 1A43     	 orr r2,r3
 329 0010 7B68     	 ldr r3,[r7,#4]
 330 0012 1A60     	 str r2,[r3]
1336:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 331              	 .loc 1 1336 0
 332 0014 BD46     	 mov sp,r7
 333 0016 02B0     	 add sp,sp,#8
 334              	 
 335 0018 80BD     	 pop {r7,pc}
 336              	 .cfi_endproc
 337              	.LFE81:
 339 001a C046     	 .section .text.XMC_CAN_NODE_ResetInitBit,"ax",%progbits
 340              	 .align 2
 341              	 .code 16
 342              	 .thumb_func
 344              	XMC_CAN_NODE_ResetInitBit:
 345              	.LFB82:
1337:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1338:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1339:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1340:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1341:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1342:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1343:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1344:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1345:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node en
1346:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1347:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1348:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1349:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit()
1350:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1351:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1352:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ResetInitBit(XMC_CAN_NODE_t *const can_node)
1353:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 346              	 .loc 1 1353 0
 347              	 .cfi_startproc
 348 0000 80B5     	 push {r7,lr}
 349              	.LCFI24:
 350              	 .cfi_def_cfa_offset 8
 351              	 .cfi_offset 7,-8
 352              	 .cfi_offset 14,-4
 353 0002 82B0     	 sub sp,sp,#8
 354              	.LCFI25:
 355              	 .cfi_def_cfa_offset 16
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI26:
 358              	 .cfi_def_cfa_register 7
 359 0006 7860     	 str r0,[r7,#4]
1354:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_INIT_Msk;
 360              	 .loc 1 1354 0
 361 0008 7B68     	 ldr r3,[r7,#4]
 362 000a 1B68     	 ldr r3,[r3]
 363 000c 0122     	 mov r2,#1
 364 000e 9343     	 bic r3,r2
 365 0010 1A1C     	 mov r2,r3
 366 0012 7B68     	 ldr r3,[r7,#4]
 367 0014 1A60     	 str r2,[r3]
1355:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 368              	 .loc 1 1355 0
 369 0016 BD46     	 mov sp,r7
 370 0018 02B0     	 add sp,sp,#8
 371              	 
 372 001a 80BD     	 pop {r7,pc}
 373              	 .cfi_endproc
 374              	.LFE82:
 376              	 .section .text.XMC_CAN_NODE_ReSetAnalyzerMode,"ax",%progbits
 377              	 .align 2
 378              	 .code 16
 379              	 .thumb_func
 381              	XMC_CAN_NODE_ReSetAnalyzerMode:
 382              	.LFB86:
1356:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1357:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1358:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1359:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1360:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1361:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1362:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1363:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1364:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Enable the CAN node, starts the participation in CAN traffic. It configures NCR.CANDIS and the N
1365:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1366:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1367:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1368:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1369:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1370:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Enable(XMC_CAN_NODE_t *const can_node)
1371:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1372:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1373:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_ResetInitBit(can_node);
1374:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1375:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1376:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1377:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1378:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1379:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1380:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1381:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1382:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1383:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Disable the CAN node, terminates participation in CAN traffic. It configures NCR.CANDIS bit.
1384:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1385:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1386:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1387:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1388:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1389:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Disable(XMC_CAN_NODE_t *const can_node)
1390:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1391:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1392:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1393:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1394:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1395:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1396:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1397:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1398:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1399:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1400:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configure CAN node in Analyzer Mode. This means that messages may be received, but not transmitt
1401:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * is sent on the CAN bus upon frame reception. Active-error flags are sent recessive instead of do
1402:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * The transmit line is continuously held at recessive (1) level. XMC_CAN_NODE_SetInitBit() should 
1403:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * set / reset AnalyzerMode. It configures NCR.CALM bit.
1404:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1405:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1406:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ReSetAnalyzerMode()
1407:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1408:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1409:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1410:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1411:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1412:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1413:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CALM_Msk;
1414:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1415:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1416:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1417:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1418:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1419:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1420:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1421:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1422:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1423:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Reset the Analyzer mode. CAN node is no more in Analyzer Mode. Please refer XMC_CAN_NODE_SetAnal
1424:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NCR.CALM bit. XMC_CAN_NODE_SetInitBit() should be called before set / reset Analyz
1425:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1426:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1427:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetAnalyzerMode()
1428:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1429:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1430:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1431:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ReSetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1432:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 383              	 .loc 1 1432 0
 384              	 .cfi_startproc
 385 0000 80B5     	 push {r7,lr}
 386              	.LCFI27:
 387              	 .cfi_def_cfa_offset 8
 388              	 .cfi_offset 7,-8
 389              	 .cfi_offset 14,-4
 390 0002 82B0     	 sub sp,sp,#8
 391              	.LCFI28:
 392              	 .cfi_def_cfa_offset 16
 393 0004 00AF     	 add r7,sp,#0
 394              	.LCFI29:
 395              	 .cfi_def_cfa_register 7
 396 0006 7860     	 str r0,[r7,#4]
1433:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CALM_Msk;
 397              	 .loc 1 1433 0
 398 0008 7B68     	 ldr r3,[r7,#4]
 399 000a 1B68     	 ldr r3,[r3]
 400 000c 8022     	 mov r2,#128
 401 000e 9343     	 bic r3,r2
 402 0010 1A1C     	 mov r2,r3
 403 0012 7B68     	 ldr r3,[r7,#4]
 404 0014 1A60     	 str r2,[r3]
1434:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 405              	 .loc 1 1434 0
 406 0016 BD46     	 mov sp,r7
 407 0018 02B0     	 add sp,sp,#8
 408              	 
 409 001a 80BD     	 pop {r7,pc}
 410              	 .cfi_endproc
 411              	.LFE86:
 413              	 .section .text.XMC_CAN_MO_SetEventNodePointer,"ax",%progbits
 414              	 .align 2
 415              	 .code 16
 416              	 .thumb_func
 418              	XMC_CAN_MO_SetEventNodePointer:
 419              	.LFB90:
1435:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1436:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
1437:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1438:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1439:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1440:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1441:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1442:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1443:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Trigger the suspension of the CAN node. An OCDS(on chip debug support) suspend trigger disables 
1444:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * soon as the CAN node becomes bus-idle or bus-off, bit INIT is internally forced to 1 to disable 
1445:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * The actual value of bit INIT remains unchanged. It configures NCR.SUSEN bit
1446:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1447:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1448:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1449:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1450:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Note:</b><br>
1451:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Bit SUSEN is reset via OCDS(on chip debug support) Reset.
1452:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1453:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1454:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1455:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableSuspend(XMC_CAN_NODE_t *const can_node)
1456:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1457:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_SUSEN_Msk;
1458:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1459:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #else
1460:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1461:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1462:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1463:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1464:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1465:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1466:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Disables the transmission on CAN node x as soon as bus-idle is reached.
1467:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1468:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1469:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1470:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1471:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @note Only available for XMC1400,XMC4800 and XMC4700 series
1472:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1473:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1474:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableTransmit(XMC_CAN_NODE_t *const can_node)
1475:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1476:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_TXDIS_Msk;
1477:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1478:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** #endif
1479:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1480:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1481:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1482:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1483:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1484:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_init frame counter mode selection. Refer @ref XMC_CAN_NODE_FRAME_COUNTER_t for v
1485:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1486:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1487:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1488:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1489:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures frame counter functions. Each CAN \a can_node is equipped with a frame counter that c
1490:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * CAN frames or obtains information about the time when a frame has been started to transmit or be
1491:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * node. It configures NFCR register.
1492:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1493:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1494:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1495:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1496:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1497:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1498:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_FrameCounterConfigure(XMC_CAN_NODE_t *const can_node,
1499:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_FRAME_COUNTER_t *const can_node_init)
1500:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1501:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NFCR = (can_node->NFCR & ~(uint32_t)(CAN_NODE_NFCR_CFMOD_Msk |
1502:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                     CAN_NODE_NFCR_CFSEL_Msk)) |
1503:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                    can_node_init->nfcr;
1504:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1505:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1506:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1507:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1508:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1509:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1510:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1511:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint16_t current value of the CAN frame counter. Range :0-65535
1512:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1513:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1514:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns the frame counter value \a can_node of the CAN node. In Frame Count Mode (CFMOD = 00B),
1515:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  count value. In Time Stamp Mode (CFMOD = 01B), this API returns the captured bit time count val
1516:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  the start of a new frame. In all Bit Timing Analysis Modes (CFMOD = 10B), this API always retur
1517:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  fCLC clock cycles (measurement result) minus 1.
1518:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1519:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1520:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1521:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1522:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1523:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1524:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint16_t XMC_CAN_NODE_GetCANFrameCounter(XMC_CAN_NODE_t *const can_node)
1525:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1526:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return (uint16_t)(((uint32_t)(can_node->NFCR & CAN_NODE_NFCR_CFC_Msk) >> CAN_NODE_NFCR_CFC_Pos));
1527:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1528:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1529:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /*MO APIs*/
1530:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1531:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1532:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1533:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1534:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1535:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1536:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1537:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1538:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1539:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1540:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Data to be transmitted and data length code.
1541:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1542:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1543:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_Config()\n\n\n
1544:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1545:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1546:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1547:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1548:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo);
1549:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1550:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1551:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1552:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1553:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1554:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1555:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1556:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1557:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures transmit request for sending data frame. It configures MOCTR register. Data shall be
1558:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  using XMC_CAN_MO_UpdateData() before calling this API.
1559:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1560:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1561:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_UpdateData()\n\n\n
1562:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1563:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1564:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1565:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo);
1566:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1567:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1568:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1569:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1570:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1571:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1572:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1573:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1574:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1575:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1576:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1577:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1578:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1579:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1580:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1581:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1582:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive(XMC_CAN_MO_t *can_mo);
1583:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1584:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1585:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1586:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1587:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1588:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1589:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1590:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1591:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1592:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1593:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1594:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1595:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1596:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1597:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1598:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo);
1599:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1600:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo       Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure 
1601:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo_ptr_int   Message Object event node pointer selection. Refer @ref XMC_CAN_MO_POINT
1602:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *                for valid values.
1603:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request interrupt output line of multiCAN module.
1604:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1605:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1606:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1607:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1608:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Message Object event node pointer with \a service_request number. It configures MOIPR
1609:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1610:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1611:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1612:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1613:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1614:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1615:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetEventNodePointer(const XMC_CAN_MO_t *const can_mo,
1616:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_MO_POINTER_EVENT_t can_mo_ptr_int,
1617:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
1618:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 420              	 .loc 1 1618 0
 421              	 .cfi_startproc
 422 0000 80B5     	 push {r7,lr}
 423              	.LCFI30:
 424              	 .cfi_def_cfa_offset 8
 425              	 .cfi_offset 7,-8
 426              	 .cfi_offset 14,-4
 427 0002 84B0     	 sub sp,sp,#16
 428              	.LCFI31:
 429              	 .cfi_def_cfa_offset 24
 430 0004 00AF     	 add r7,sp,#0
 431              	.LCFI32:
 432              	 .cfi_def_cfa_register 7
 433 0006 F860     	 str r0,[r7,#12]
 434 0008 7A60     	 str r2,[r7,#4]
 435 000a 0B23     	 mov r3,#11
 436 000c FB18     	 add r3,r7,r3
 437 000e 0A1C     	 add r2,r1,#0
 438 0010 1A70     	 strb r2,[r3]
1619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
 439              	 .loc 1 1619 0
 440 0012 FB68     	 ldr r3,[r7,#12]
 441 0014 1B68     	 ldr r3,[r3]
 442 0016 FA68     	 ldr r2,[r7,#12]
 443 0018 1268     	 ldr r2,[r2]
 444 001a 9268     	 ldr r2,[r2,#8]
 445 001c 0B21     	 mov r1,#11
 446 001e 7918     	 add r1,r7,r1
 447 0020 0978     	 ldrb r1,[r1]
 448 0022 0720     	 mov r0,#7
 449 0024 8840     	 lsl r0,r0,r1
 450 0026 011C     	 mov r1,r0
 451 0028 C943     	 mvn r1,r1
 452 002a 1140     	 and r1,r2
1620:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****                               (service_request << (uint32_t)can_mo_ptr_int);
 453              	 .loc 1 1620 0
 454 002c 0B22     	 mov r2,#11
 455 002e BA18     	 add r2,r7,r2
 456 0030 1278     	 ldrb r2,[r2]
 457 0032 7868     	 ldr r0,[r7,#4]
 458 0034 9040     	 lsl r0,r0,r2
 459 0036 021C     	 mov r2,r0
1619:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
 460              	 .loc 1 1619 0
 461 0038 0A43     	 orr r2,r1
 462 003a 9A60     	 str r2,[r3,#8]
1621:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 463              	 .loc 1 1621 0
 464 003c BD46     	 mov sp,r7
 465 003e 04B0     	 add sp,sp,#16
 466              	 
 467 0040 80BD     	 pop {r7,pc}
 468              	 .cfi_endproc
 469              	.LFE90:
 471 0042 C046     	 .section .text.XMC_CAN_MO_GetStatus,"ax",%progbits
 472              	 .align 2
 473              	 .code 16
 474              	 .thumb_func
 476              	XMC_CAN_MO_GetStatus:
 477              	.LFB91:
1622:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1623:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1624:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1625:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1626:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current Message Object status.
1627:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1628:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1629:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Message Object status, that indicates message object transfer status and message object
1630:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  information such as the number of the current message object predecessor and successor message 
1631:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  the list number to which the message object is assigned.
1632:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1633:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1634:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1635:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1636:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1637:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1638:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_MO_GetStatus(const XMC_CAN_MO_t *const can_mo)
1639:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 478              	 .loc 1 1639 0
 479              	 .cfi_startproc
 480 0000 80B5     	 push {r7,lr}
 481              	.LCFI33:
 482              	 .cfi_def_cfa_offset 8
 483              	 .cfi_offset 7,-8
 484              	 .cfi_offset 14,-4
 485 0002 82B0     	 sub sp,sp,#8
 486              	.LCFI34:
 487              	 .cfi_def_cfa_offset 16
 488 0004 00AF     	 add r7,sp,#0
 489              	.LCFI35:
 490              	 .cfi_def_cfa_register 7
 491 0006 7860     	 str r0,[r7,#4]
1640:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_mo->can_mo_ptr->MOSTAT));
 492              	 .loc 1 1640 0
 493 0008 7B68     	 ldr r3,[r7,#4]
 494 000a 1B68     	 ldr r3,[r3]
 495 000c DB69     	 ldr r3,[r3,#28]
1641:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 496              	 .loc 1 1641 0
 497 000e 181C     	 mov r0,r3
 498 0010 BD46     	 mov sp,r7
 499 0012 02B0     	 add sp,sp,#8
 500              	 
 501 0014 80BD     	 pop {r7,pc}
 502              	 .cfi_endproc
 503              	.LFE91:
 505 0016 C046     	 .section .text.XMC_CAN_MO_ResetStatus,"ax",%progbits
 506              	 .align 2
 507              	 .code 16
 508              	 .thumb_func
 510              	XMC_CAN_MO_ResetStatus:
 511              	.LFB93:
1642:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1643:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1644:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1645:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1646:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_SET_STATUS_t for detail
1647:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *         Multiple enums can be ORed.
1648:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1649:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1650:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1651:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Message Object set Status. It configures MOCTR register.
1652:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1653:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1654:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_ResetStatus()\n\n\n
1655:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1656:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1657:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1658:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1659:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
1660:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
1661:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
1662:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1663:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1664:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1665:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1666:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_RESET_STATUS_t for deta
1667:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *             Multiple enums can be ORed.
1668:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1669:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1670:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1671:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  Clears Message Object interrupt events. It configures MOCTR register.
1672:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1673:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1674:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * None
1675:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1676:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1677:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1678:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_ResetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1679:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 512              	 .loc 1 1679 0
 513              	 .cfi_startproc
 514 0000 80B5     	 push {r7,lr}
 515              	.LCFI36:
 516              	 .cfi_def_cfa_offset 8
 517              	 .cfi_offset 7,-8
 518              	 .cfi_offset 14,-4
 519 0002 82B0     	 sub sp,sp,#8
 520              	.LCFI37:
 521              	 .cfi_def_cfa_offset 16
 522 0004 00AF     	 add r7,sp,#0
 523              	.LCFI38:
 524              	 .cfi_def_cfa_register 7
 525 0006 7860     	 str r0,[r7,#4]
 526 0008 3960     	 str r1,[r7]
1680:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
 527              	 .loc 1 1680 0
 528 000a 7B68     	 ldr r3,[r7,#4]
 529 000c 1B68     	 ldr r3,[r3]
 530 000e 3A68     	 ldr r2,[r7]
 531 0010 DA61     	 str r2,[r3,#28]
1681:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 532              	 .loc 1 1681 0
 533 0012 BD46     	 mov sp,r7
 534 0014 02B0     	 add sp,sp,#8
 535              	 
 536 0016 80BD     	 pop {r7,pc}
 537              	 .cfi_endproc
 538              	.LFE93:
 540              	 .section .text.XMC_CAN_MO_EnableEvent,"ax",%progbits
 541              	 .align 2
 542              	 .code 16
 543              	 .thumb_func
 545              	XMC_CAN_MO_EnableEvent:
 546              	.LFB94:
1682:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1683:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1684:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1685:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** /**
1686:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1687:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @param event  CAN node Message Object event selection. Refer @ref XMC_CAN_MO_EVENT_t for details
1688:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1689:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1690:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1691:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1692:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN Message Object events. \a event can be ORed multiple Message Object events. It config
1693:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1694:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1695:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_MO_DisableEvent()
1696:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  *
1697:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****  */
1698:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** 
1699:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_EnableEvent(const XMC_CAN_MO_t *const can_mo,
1700:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t event)
1701:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** {
 547              	 .loc 1 1701 0
 548              	 .cfi_startproc
 549 0000 80B5     	 push {r7,lr}
 550              	.LCFI39:
 551              	 .cfi_def_cfa_offset 8
 552              	 .cfi_offset 7,-8
 553              	 .cfi_offset 14,-4
 554 0002 82B0     	 sub sp,sp,#8
 555              	.LCFI40:
 556              	 .cfi_def_cfa_offset 16
 557 0004 00AF     	 add r7,sp,#0
 558              	.LCFI41:
 559              	 .cfi_def_cfa_register 7
 560 0006 7860     	 str r0,[r7,#4]
 561 0008 3960     	 str r1,[r7]
1702:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOFCR |= event;
 562              	 .loc 1 1702 0
 563 000a 7B68     	 ldr r3,[r7,#4]
 564 000c 1B68     	 ldr r3,[r3]
 565 000e 7A68     	 ldr r2,[r7,#4]
 566 0010 1268     	 ldr r2,[r2]
 567 0012 1168     	 ldr r1,[r2]
 568 0014 3A68     	 ldr r2,[r7]
 569 0016 0A43     	 orr r2,r1
 570 0018 1A60     	 str r2,[r3]
1703:C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc\xmc_can.h **** }
 571              	 .loc 1 1703 0
 572 001a BD46     	 mov sp,r7
 573 001c 02B0     	 add sp,sp,#8
 574              	 
 575 001e 80BD     	 pop {r7,pc}
 576              	 .cfi_endproc
 577              	.LFE94:
 579              	 .section .text.CAN_NODE_MO_EnableTxEvent,"ax",%progbits
 580              	 .align 2
 581              	 .code 16
 582              	 .thumb_func
 584              	CAN_NODE_MO_EnableTxEvent:
 585              	.LFB132:
 586              	 .file 2 "../Dave/Generated/CAN_NODE/can_node.h"
   1:../Dave/Generated/CAN_NODE/can_node.h **** /**
   2:../Dave/Generated/CAN_NODE/can_node.h ****  * @file can_node.h
   3:../Dave/Generated/CAN_NODE/can_node.h ****  * @date 2021-01-08
   4:../Dave/Generated/CAN_NODE/can_node.h ****  *
   5:../Dave/Generated/CAN_NODE/can_node.h ****  * NOTE:
   6:../Dave/Generated/CAN_NODE/can_node.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/CAN_NODE/can_node.h ****  *
   8:../Dave/Generated/CAN_NODE/can_node.h ****  * @cond
   9:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  10:../Dave/Generated/CAN_NODE/can_node.h ****  * CAN_NODE v4.1.24 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:../Dave/Generated/CAN_NODE/can_node.h ****  *                   node baud rate and to enable/disable Node and MO events.
  12:../Dave/Generated/CAN_NODE/can_node.h ****  *
  13:../Dave/Generated/CAN_NODE/can_node.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:../Dave/Generated/CAN_NODE/can_node.h ****  * All rights reserved.
  15:../Dave/Generated/CAN_NODE/can_node.h ****  *                                             
  16:../Dave/Generated/CAN_NODE/can_node.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/CAN_NODE/can_node.h ****  * following conditions are met:
  18:../Dave/Generated/CAN_NODE/can_node.h ****  *
  19:../Dave/Generated/CAN_NODE/can_node.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/CAN_NODE/can_node.h ****  *   disclaimer.
  21:../Dave/Generated/CAN_NODE/can_node.h ****  *
  22:../Dave/Generated/CAN_NODE/can_node.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/CAN_NODE/can_node.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/CAN_NODE/can_node.h ****  *
  25:../Dave/Generated/CAN_NODE/can_node.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/CAN_NODE/can_node.h ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/CAN_NODE/can_node.h ****  *
  28:../Dave/Generated/CAN_NODE/can_node.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/CAN_NODE/can_node.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/CAN_NODE/can_node.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/CAN_NODE/can_node.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/CAN_NODE/can_node.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/CAN_NODE/can_node.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/CAN_NODE/can_node.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/CAN_NODE/can_node.h ****  *
  36:../Dave/Generated/CAN_NODE/can_node.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/CAN_NODE/can_node.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  39:../Dave/Generated/CAN_NODE/can_node.h ****  *
  40:../Dave/Generated/CAN_NODE/can_node.h ****  * Change History
  41:../Dave/Generated/CAN_NODE/can_node.h ****  * --------------
  42:../Dave/Generated/CAN_NODE/can_node.h ****  *
  43:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-02-16:
  44:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Initial version<br>
  45:../Dave/Generated/CAN_NODE/can_node.h ****  *
  46:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-05-12:
  47:../Dave/Generated/CAN_NODE/can_node.h ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(),CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSta
  49:../Dave/Generated/CAN_NODE/can_node.h ****  *
  50:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-06-18:
  51:../Dave/Generated/CAN_NODE/can_node.h ****  *     - LLD version check is removed.<br>
  52:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Version check added for XMCLib dependency.<br>
  53:../Dave/Generated/CAN_NODE/can_node.h ****  *
  54:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-06-30:
  55:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New APIs are added: CAN_NODE_Enable() and CAN_NODE_Disable() to enable and disable CAN nod
  56:../Dave/Generated/CAN_NODE/can_node.h ****  *         from participating CAN traffic. <br>
  57:../Dave/Generated/CAN_NODE/can_node.h ****  *
  58:../Dave/Generated/CAN_NODE/can_node.h ****  * 2016-06-20:
  59:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New API added: CAN_NODE_MO_UpdateID() to update the message object identifier.
  60:../Dave/Generated/CAN_NODE/can_node.h ****  * 
  61:../Dave/Generated/CAN_NODE/can_node.h ****  * 2018-08-28:
  62:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Fixed code example for CAN_NODE_MO_Transmit()
  63:../Dave/Generated/CAN_NODE/can_node.h ****  * 
  64:../Dave/Generated/CAN_NODE/can_node.h ****  * 2021-01-08:
  65:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Modified check for minimum XMCLib version
  66:../Dave/Generated/CAN_NODE/can_node.h ****  *
  67:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcond
  68:../Dave/Generated/CAN_NODE/can_node.h ****  *
  69:../Dave/Generated/CAN_NODE/can_node.h ****  */
  70:../Dave/Generated/CAN_NODE/can_node.h **** 
  71:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
  72:../Dave/Generated/CAN_NODE/can_node.h ****  * HEADER FILES
  73:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  74:../Dave/Generated/CAN_NODE/can_node.h **** 
  75:../Dave/Generated/CAN_NODE/can_node.h **** #ifndef CAN_NODE_H
  76:../Dave/Generated/CAN_NODE/can_node.h **** #define CAN_NODE_H
  77:../Dave/Generated/CAN_NODE/can_node.h **** 
  78:../Dave/Generated/CAN_NODE/can_node.h **** #include "xmc_can.h"
  79:../Dave/Generated/CAN_NODE/can_node.h **** #include "xmc_gpio.h"
  80:../Dave/Generated/CAN_NODE/can_node.h **** #include "GLOBAL_CAN/global_can.h"
  81:../Dave/Generated/CAN_NODE/can_node.h **** #include "can_node_conf.h"
  82:../Dave/Generated/CAN_NODE/can_node.h **** #include "DAVE_Common.h"
  83:../Dave/Generated/CAN_NODE/can_node.h **** 
  84:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
  85:../Dave/Generated/CAN_NODE/can_node.h ****  * MACROS
  86:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  87:../Dave/Generated/CAN_NODE/can_node.h **** #define CAN_NODE_XMC_LIB_MAJOR_VERSION 2
  88:../Dave/Generated/CAN_NODE/can_node.h **** #define CAN_NODE_XMC_LIB_MINOR_VERSION 0
  89:../Dave/Generated/CAN_NODE/can_node.h **** #define CAN_NODE_XMC_LIB_PATCH_VERSION 0
  90:../Dave/Generated/CAN_NODE/can_node.h **** 
  91:../Dave/Generated/CAN_NODE/can_node.h **** #if !((XMC_LIB_MAJOR_VERSION > CAN_NODE_XMC_LIB_MAJOR_VERSION) ||\
  92:../Dave/Generated/CAN_NODE/can_node.h ****       ((XMC_LIB_MAJOR_VERSION == CAN_NODE_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > CAN_NO
  93:../Dave/Generated/CAN_NODE/can_node.h ****       ((XMC_LIB_MAJOR_VERSION == CAN_NODE_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == CAN_N
  94:../Dave/Generated/CAN_NODE/can_node.h **** #error "CAN_NODE requires XMC Peripheral Library v2.0.0 or higher"
  95:../Dave/Generated/CAN_NODE/can_node.h **** #endif
  96:../Dave/Generated/CAN_NODE/can_node.h **** 
  97:../Dave/Generated/CAN_NODE/can_node.h ****  /*************************************************************************************************
  98:../Dave/Generated/CAN_NODE/can_node.h ****  * ENUMS
  99:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
 100:../Dave/Generated/CAN_NODE/can_node.h **** /**
 101:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_enumerations
 102:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 103:../Dave/Generated/CAN_NODE/can_node.h ****  */
 104:../Dave/Generated/CAN_NODE/can_node.h **** 
 105:../Dave/Generated/CAN_NODE/can_node.h **** /**
 106:../Dave/Generated/CAN_NODE/can_node.h ****  *  Enum to describe the possible status values, returned
 107:../Dave/Generated/CAN_NODE/can_node.h ****  *  by CAN APIs.
 108:../Dave/Generated/CAN_NODE/can_node.h ****  */
 109:../Dave/Generated/CAN_NODE/can_node.h **** typedef enum CAN_NODE_STATUS
 110:../Dave/Generated/CAN_NODE/can_node.h **** {
 111:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_SUCCESS = 0, /**< APP success state */
 112:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_FAILURE,  /**< Returned when unknown error occurred */
 113:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_BUSY,      /**< CAN_NODE is busy and can not handle request*/
 114:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_MO_NOT_ACCEPTABLE,/**< Message object type not allowed*/
 115:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_MO_DISABLED  /**< Returned if Message object is disabled */
 116:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_STATUS_t;
 117:../Dave/Generated/CAN_NODE/can_node.h **** 
 118:../Dave/Generated/CAN_NODE/can_node.h **** 
 119:../Dave/Generated/CAN_NODE/can_node.h **** /**
 120:../Dave/Generated/CAN_NODE/can_node.h ****  * @}
 121:../Dave/Generated/CAN_NODE/can_node.h ****  */
 122:../Dave/Generated/CAN_NODE/can_node.h **** 
 123:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
 124:../Dave/Generated/CAN_NODE/can_node.h **** * DATA STRUCTURES
 125:../Dave/Generated/CAN_NODE/can_node.h **** ***************************************************************************************************
 126:../Dave/Generated/CAN_NODE/can_node.h **** 
 127:../Dave/Generated/CAN_NODE/can_node.h **** /**
 128:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_datastructures
 129:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 130:../Dave/Generated/CAN_NODE/can_node.h ****  */
 131:../Dave/Generated/CAN_NODE/can_node.h **** 
 132:../Dave/Generated/CAN_NODE/can_node.h **** /**
 133:../Dave/Generated/CAN_NODE/can_node.h ****  * This is the data structure to hold the configured port and pin numbers for CAN_NODE.
 134:../Dave/Generated/CAN_NODE/can_node.h ****  *
 135:../Dave/Generated/CAN_NODE/can_node.h ****  */
 136:../Dave/Generated/CAN_NODE/can_node.h **** 
 137:../Dave/Generated/CAN_NODE/can_node.h **** typedef const struct CAN_NODE_GPIO
 138:../Dave/Generated/CAN_NODE/can_node.h **** {
 139:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_GPIO_PORT_t  *const port; /**< Pointer to port hardware register to select for CAN communicat
 140:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t  pin;    /**< Configured CAN Tx/Rx pin number */
 141:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_GPIO_t;
 142:../Dave/Generated/CAN_NODE/can_node.h **** 
 143:../Dave/Generated/CAN_NODE/can_node.h **** /**
 144:../Dave/Generated/CAN_NODE/can_node.h ****  *    Node events service request structure for CAN_NODE.
 145:../Dave/Generated/CAN_NODE/can_node.h ****  *    To enable the events user explicitly connect the signals to INTERUPT APP.
 146:../Dave/Generated/CAN_NODE/can_node.h ****  */
 147:../Dave/Generated/CAN_NODE/can_node.h **** typedef const struct CAN_NODE_SR
 148:../Dave/Generated/CAN_NODE/can_node.h **** {
 149:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t alert_event_sr;      /**< Alert event service request  */
 150:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t lec_event_sr;        /**< LEC event service request  */
 151:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t txok_event_sr;       /**< Transmit OK event service request  */
 152:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t framecount_event_sr; /**< Frame count event service request  */
 153:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_SR_t;
 154:../Dave/Generated/CAN_NODE/can_node.h **** 
 155:../Dave/Generated/CAN_NODE/can_node.h **** /**
 156:../Dave/Generated/CAN_NODE/can_node.h ****  *   Message object structure for CAN_NODE APP
 157:../Dave/Generated/CAN_NODE/can_node.h ****  */
 158:../Dave/Generated/CAN_NODE/can_node.h **** typedef struct CAN_NODE_LMO
 159:../Dave/Generated/CAN_NODE/can_node.h **** {
 160:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_t *mo_ptr;        /**< CAN message object pointer */
 161:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t number;              /**< Consumed CAN message object number */
 162:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t tx_sr;               /**< CAN message object transmit service request */
 163:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t rx_sr;               /**< CAN message object receive service request */
 164:../Dave/Generated/CAN_NODE/can_node.h ****   const bool tx_event_enable;  /**< GUI configured value for CAN message object transmit event chec
 165:../Dave/Generated/CAN_NODE/can_node.h ****   const bool rx_event_enable;  /**< GUI configured value for CAN message object receive event check
 166:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_LMO_t;
 167:../Dave/Generated/CAN_NODE/can_node.h **** 
 168:../Dave/Generated/CAN_NODE/can_node.h **** /**
 169:../Dave/Generated/CAN_NODE/can_node.h ****  *  Initialization data structure for CAN_NODE APP
 170:../Dave/Generated/CAN_NODE/can_node.h ****  */
 171:../Dave/Generated/CAN_NODE/can_node.h **** typedef struct CAN_NODE
 172:../Dave/Generated/CAN_NODE/can_node.h **** {
 173:../Dave/Generated/CAN_NODE/can_node.h ****   GLOBAL_CAN_t *const global_ptr;                    /**< Global CAN pointer */
 174:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_t *const node_ptr;                    /**< Consumed CAN node pointer */
 175:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *baudrate_config; /**< Pointer to bit time configuration s
 176:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_LMO_t *lmobj_ptr[32];                     /**< Array of pointer to logical message objec
 177:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_SR_t *node_sr_ptr;                        /**< Node service request  */
 178:../Dave/Generated/CAN_NODE/can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_out;          /**< GPIO structure for CAN transmit pin  */
 179:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_out_config;   /**< GPIO configuration structure for CAN tran
 180:../Dave/Generated/CAN_NODE/can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_in;           /**< GPIO structure for CAN receive pin  */
 181:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_in_config;    /**< GPIO configuration structure for CAN rece
 182:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_CAN_NODE_RECEIVE_INPUT_t rx_signal;      /**< Possible input type for CAN receive pin *
 183:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t node_num;                                  /**< Consumed CAN node number */
 184:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t mo_count;                                  /**< GUI configured value Consumed CAN MO coun
 185:../Dave/Generated/CAN_NODE/can_node.h ****   bool lec_event_enable;                       /**< GUI configured value for LEC event check box  *
 186:../Dave/Generated/CAN_NODE/can_node.h ****   bool txok_event_enable;                      /**< GUI configured value for transmit OK event chec
 187:../Dave/Generated/CAN_NODE/can_node.h ****   bool alert_event_enable;                     /**< GUI configured value for alert event check box 
 188:../Dave/Generated/CAN_NODE/can_node.h ****   bool framecount_event_enable;                /**< GUI configured value for frame count event chec
 189:../Dave/Generated/CAN_NODE/can_node.h ****   bool loopback_enable;                        /**< GUI configured value for loop back enable check
 190:../Dave/Generated/CAN_NODE/can_node.h **** 
 191:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_t;
 192:../Dave/Generated/CAN_NODE/can_node.h **** 
 193:../Dave/Generated/CAN_NODE/can_node.h **** /**
 194:../Dave/Generated/CAN_NODE/can_node.h ****  * @}
 195:../Dave/Generated/CAN_NODE/can_node.h ****  */
 196:../Dave/Generated/CAN_NODE/can_node.h **** 
 197:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
 198:../Dave/Generated/CAN_NODE/can_node.h **** * API Prototypes
 199:../Dave/Generated/CAN_NODE/can_node.h **** ***************************************************************************************************
 200:../Dave/Generated/CAN_NODE/can_node.h **** /* Support for C++ codebase */
 201:../Dave/Generated/CAN_NODE/can_node.h **** #ifdef __cplusplus
 202:../Dave/Generated/CAN_NODE/can_node.h **** extern "C" {
 203:../Dave/Generated/CAN_NODE/can_node.h **** #endif
 204:../Dave/Generated/CAN_NODE/can_node.h **** 
 205:../Dave/Generated/CAN_NODE/can_node.h **** /**
 206:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_apidoc
 207:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 208:../Dave/Generated/CAN_NODE/can_node.h ****  */
 209:../Dave/Generated/CAN_NODE/can_node.h **** 
 210:../Dave/Generated/CAN_NODE/can_node.h **** /**
 211:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to read the CAN_NODE APP version.
 212:../Dave/Generated/CAN_NODE/can_node.h ****  *
 213:../Dave/Generated/CAN_NODE/can_node.h ****  * @return DAVE_APP_VERSION_t Structure that contains the members
 214:../Dave/Generated/CAN_NODE/can_node.h ****  *         major, minor and patch values.
 215:../Dave/Generated/CAN_NODE/can_node.h ****  *
 216:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 217:../Dave/Generated/CAN_NODE/can_node.h ****  * The function can be used to check application software compatibility with a
 218:../Dave/Generated/CAN_NODE/can_node.h ****  * specific version of the APP.
 219:../Dave/Generated/CAN_NODE/can_node.h ****  *
 220:../Dave/Generated/CAN_NODE/can_node.h ****  *
 221:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 222:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 223:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 224:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 225:../Dave/Generated/CAN_NODE/can_node.h ****  *
 226:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 227:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 228:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 229:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_APP_VERSION_t can_version;
 230:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 231:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 232:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 233:../Dave/Generated/CAN_NODE/can_node.h ****  *     can_version = CAN_NODE_GetAppVersion();
 234:../Dave/Generated/CAN_NODE/can_node.h ****  *     if ((can_version.major == 4U) &&
 235:../Dave/Generated/CAN_NODE/can_node.h ****  *         (can_version.minor == 1U))
 236:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 237:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code
 238:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 239:../Dave/Generated/CAN_NODE/can_node.h ****  *     else
 240:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 241:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Probably, not the right version.
 242:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 243:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 244:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 245:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 246:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 247:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 248:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 249:../Dave/Generated/CAN_NODE/can_node.h ****  *
 250:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 251:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 252:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 253:../Dave/Generated/CAN_NODE/can_node.h ****  */
 254:../Dave/Generated/CAN_NODE/can_node.h **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion(void);
 255:../Dave/Generated/CAN_NODE/can_node.h **** 
 256:../Dave/Generated/CAN_NODE/can_node.h **** /**
 257:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to initialize the CAN node by configuring the baud rate,
 258:../Dave/Generated/CAN_NODE/can_node.h ****  *        can bus type(External or internal) and message objects.
 259:../Dave/Generated/CAN_NODE/can_node.h ****  *
 260:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 261:../Dave/Generated/CAN_NODE/can_node.h ****  * @return CAN_NODE_STATUS_t CAN_NODE_STATUS_SUCCESS: if the initialization succeeds.<BR>
 262:../Dave/Generated/CAN_NODE/can_node.h ****  *                           CAN_NODE_STATUS_FAILURE  : for failure case.<BR>
 263:../Dave/Generated/CAN_NODE/can_node.h ****  *
 264:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 265:../Dave/Generated/CAN_NODE/can_node.h ****  * This function internally calls GLOBAL_CAN_Init() API to configure peripheral frequency
 266:../Dave/Generated/CAN_NODE/can_node.h ****  * to enable CAN communication. API configures loop back mode or external CAN bus, message objects
 267:../Dave/Generated/CAN_NODE/can_node.h ****  *  based on the settings and enables configured event flags and service request values.
 268:../Dave/Generated/CAN_NODE/can_node.h ****  *
 269:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 270:../Dave/Generated/CAN_NODE/can_node.h ****  *
 271:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 272:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 273:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 274:../Dave/Generated/CAN_NODE/can_node.h ****  *
 275:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 276:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 277:../Dave/Generated/CAN_NODE/can_node.h ****  *   CAN_NODE_STATUS_t init_status;
 278:../Dave/Generated/CAN_NODE/can_node.h ****  *   // DAVE_Init() internally calls CAN_NODE_Init()
 279:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = CAN_NODE_Init(&CAN_NODE_0);
 280:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == CAN_NODE_STATUS_SUCCESS)
 281:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 282:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code
 283:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 284:../Dave/Generated/CAN_NODE/can_node.h ****  *   else
 285:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 286:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Failed to initialize the CAN peripheral
 287:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 288:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 289:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 290:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 291:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 292:../Dave/Generated/CAN_NODE/can_node.h ****  *
 293:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 294:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 295:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 296:../Dave/Generated/CAN_NODE/can_node.h ****  */
 297:../Dave/Generated/CAN_NODE/can_node.h **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t *handle);
 298:../Dave/Generated/CAN_NODE/can_node.h **** 
 299:../Dave/Generated/CAN_NODE/can_node.h **** /**
 300:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to initialize the CAN message object. It configures message type,
 301:../Dave/Generated/CAN_NODE/can_node.h ****  *         message ID type, Identifier value, mask bits, required data length.<br>
 302:../Dave/Generated/CAN_NODE/can_node.h ****  *         It also configures the transmit and receive events for the message object.<br>
 303:../Dave/Generated/CAN_NODE/can_node.h ****  *
 304:../Dave/Generated/CAN_NODE/can_node.h ****  * @param lmo_ptr is a handle with pointers to static and dynamic content of message object.@ref CA
 305:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.
 306:../Dave/Generated/CAN_NODE/can_node.h ****  *
 307:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 308:../Dave/Generated/CAN_NODE/can_node.h ****  *
 309:../Dave/Generated/CAN_NODE/can_node.h ****  *  It configures message type to transmit / receive message object, message ID type to standard / 
 310:../Dave/Generated/CAN_NODE/can_node.h ****  *         Identifier value, mask bits,required data length for the transmit message object.
 311:../Dave/Generated/CAN_NODE/can_node.h ****  *  It also enables configured event flags for message objects.
 312:../Dave/Generated/CAN_NODE/can_node.h ****  *  To achieve this functionality API calls XMC_CAN_MO_Config().
 313:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 314:../Dave/Generated/CAN_NODE/can_node.h ****  *
 315:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 316:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 317:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 318:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 319:../Dave/Generated/CAN_NODE/can_node.h ****  *
 320:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 321:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 322:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 323:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 324:../Dave/Generated/CAN_NODE/can_node.h ****  *     XMC_CAN_MO_t *MO_Ptr;
 325:../Dave/Generated/CAN_NODE/can_node.h ****  *
 326:../Dave/Generated/CAN_NODE/can_node.h ****  *     MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;   //'0' refers to first message object configured
 327:../Dave/Generated/CAN_NODE/can_node.h ****  *                                                   // for the selected can node
 328:../Dave/Generated/CAN_NODE/can_node.h ****  *
 329:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init(); //CAN_NODE_Init();
 330:../Dave/Generated/CAN_NODE/can_node.h ****  *
 331:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 332:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 333:../Dave/Generated/CAN_NODE/can_node.h ****  *
 334:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Application code.
 335:../Dave/Generated/CAN_NODE/can_node.h ****  *
 336:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_mo_type = XMC_CAN_MO_TYPE_TRANSMSGOBJ;  //Configure message object type as tra
 337:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_id_mode = XMC_CAN_FRAME_TYPE_STANDARD_11BITS; //configure MO identifier type
 338:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data_length = 8; // Configure CAN transmit MO data length field
 339:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data[1] = 0xAAAA5555;  // Configure Higher 4 bytes of Data
 340:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data[0] = 0xAAAA5555;  // Configure Lower 4 bytes of Data
 341:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Runtime change the MO configuration
 342:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Init(HandlePtr1->lmobj_ptr[0]);
 343:../Dave/Generated/CAN_NODE/can_node.h ****  *
 344:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 345:../Dave/Generated/CAN_NODE/can_node.h ****  *     else
 346:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 347:../Dave/Generated/CAN_NODE/can_node.h ****  *       // CAN initialization failed
 348:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 349:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 350:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 351:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 352:../Dave/Generated/CAN_NODE/can_node.h ****  *
 353:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 354:../Dave/Generated/CAN_NODE/can_node.h ****  *
 355:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 356:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 357:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 358:../Dave/Generated/CAN_NODE/can_node.h ****  */
 359:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr);
 360:../Dave/Generated/CAN_NODE/can_node.h **** 
 361:../Dave/Generated/CAN_NODE/can_node.h **** /**
 362:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to configures the CAN bit time by using SJW, sample point and can frequency.<br>
 363:../Dave/Generated/CAN_NODE/can_node.h ****  *
 364:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t
 365:../Dave/Generated/CAN_NODE/can_node.h ****  * @param baudrate  is the required baud rate for the CAN node.
 366:../Dave/Generated/CAN_NODE/can_node.h ****  * @param sample_point is the sample point for the bit time.<br>
 367:../Dave/Generated/CAN_NODE/can_node.h ****  *        \b Range: 0% to 100% of the total bit time.<br>
 368:../Dave/Generated/CAN_NODE/can_node.h ****  * @param sjw is the (synchronization jump width) time quanta for resynchronizations.<br>
 369:../Dave/Generated/CAN_NODE/can_node.h ****  *
 370:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 371:../Dave/Generated/CAN_NODE/can_node.h ****  *
 372:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 373:../Dave/Generated/CAN_NODE/can_node.h ****  *
 374:../Dave/Generated/CAN_NODE/can_node.h ****  * This function configures the CAN node bit time by updating synchronous jump width,
 375:../Dave/Generated/CAN_NODE/can_node.h ****  *      baud rate prescaler(BRP),sample point, divider mode, and time segment values to
 376:../Dave/Generated/CAN_NODE/can_node.h ****  *      the node bit timing register(NBTR). To achieve this functionality
 377:../Dave/Generated/CAN_NODE/can_node.h ****  *      API calls XMC_CAN_NODE_NominalBitTimeConfigure().
 378:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 379:../Dave/Generated/CAN_NODE/can_node.h ****  *
 380:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 381:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 382:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 383:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 384:../Dave/Generated/CAN_NODE/can_node.h ****  *
 385:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 386:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 387:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 388:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 389:../Dave/Generated/CAN_NODE/can_node.h ****  *   uint32_t new_baudrate = 1000000;  // in Hz
 390:../Dave/Generated/CAN_NODE/can_node.h ****  *   uint16_t new_sampe_point = 80;
 391:../Dave/Generated/CAN_NODE/can_node.h ****  *   uint8_t new_sjw = 2;
 392:../Dave/Generated/CAN_NODE/can_node.h ****  *
 393:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 394:../Dave/Generated/CAN_NODE/can_node.h ****  *   // DAVE_Init() internally calls CAN_NODE_Init()
 395:../Dave/Generated/CAN_NODE/can_node.h ****  *   //CAN_NODE_Init() internally calls CAN_NODE_ConfigBaudrate()
 396:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 397:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 398:../Dave/Generated/CAN_NODE/can_node.h ****  *     //  Application code ........
 399:../Dave/Generated/CAN_NODE/can_node.h ****  *
 400:../Dave/Generated/CAN_NODE/can_node.h ****  *     // For run time baud rate configuration change
 401:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Configure new baud rate to 1MHz
 402:../Dave/Generated/CAN_NODE/can_node.h ****  *
 403:../Dave/Generated/CAN_NODE/can_node.h ****  *     XMC_CAN_NODE_SetInitBit(HandlePtr1->node_ptr);
 404:../Dave/Generated/CAN_NODE/can_node.h ****  *
 405:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_ConfigBaudrate(HandlePtr1, new_baudrate, new_sampe_point,new_sjw);
 406:../Dave/Generated/CAN_NODE/can_node.h ****  *
 407:../Dave/Generated/CAN_NODE/can_node.h ****  *     XMC_CAN_NODE_ResetInitBit(HandlePtr1->node_ptr);
 408:../Dave/Generated/CAN_NODE/can_node.h ****  *
 409:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 410:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 411:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 412:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 413:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 414:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 415:../Dave/Generated/CAN_NODE/can_node.h ****  *
 416:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 417:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 418:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 419:../Dave/Generated/CAN_NODE/can_node.h ****  */
 420:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 421:../Dave/Generated/CAN_NODE/can_node.h **** 
 422:../Dave/Generated/CAN_NODE/can_node.h **** 
 423:../Dave/Generated/CAN_NODE/can_node.h **** /**
 424:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable the node events like node alert, LEC, Transfer OK, frame counter overf
 425:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t<br>
 426:../Dave/Generated/CAN_NODE/can_node.h ****  * @param  node_event is the required node event to enable. @ref XMC_CAN_NODE_EVENT_t <br>
 427:../Dave/Generated/CAN_NODE/can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 428:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None <BR>
 429:../Dave/Generated/CAN_NODE/can_node.h ****  *
 430:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 431:../Dave/Generated/CAN_NODE/can_node.h ****  * This function check the node event flags which are enabled through GUI. If the flags are configu
 432:../Dave/Generated/CAN_NODE/can_node.h ****  * then API enables the related CAN node events.
 433:../Dave/Generated/CAN_NODE/can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 434:../Dave/Generated/CAN_NODE/can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 435:../Dave/Generated/CAN_NODE/can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 436:../Dave/Generated/CAN_NODE/can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 437:../Dave/Generated/CAN_NODE/can_node.h ****  * This API enables the above events by configuring NCR register.
 438:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_EnableEvent().
 439:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 440:../Dave/Generated/CAN_NODE/can_node.h ****  *
 441:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 442:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 443:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 444:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 445:../Dave/Generated/CAN_NODE/can_node.h ****  *
 446:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 447:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 448:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 449:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 450:../Dave/Generated/CAN_NODE/can_node.h ****  *
 451:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 452:../Dave/Generated/CAN_NODE/can_node.h ****  *   //DAVE_Init();   internally calls CAN_NODE_Init()
 453:../Dave/Generated/CAN_NODE/can_node.h ****  *   //CAN_NODE_Init() internally calls CAN_NODE_EnableEvent()
 454:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 455:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 456:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code ..
 457:../Dave/Generated/CAN_NODE/can_node.h ****  *
 458:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable the events during run time....
 459:../Dave/Generated/CAN_NODE/can_node.h ****  *     //  enable LEC event
 460:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 461:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable Alert event
 462:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 463:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable Transmit OK event
 464:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 465:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable CFCIE event
 466:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 467:../Dave/Generated/CAN_NODE/can_node.h ****  *
 468:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code...
 469:../Dave/Generated/CAN_NODE/can_node.h ****  *
 470:../Dave/Generated/CAN_NODE/can_node.h ****  *     // disable the events by calling CAN_NODE_DisableEvent() API
 471:../Dave/Generated/CAN_NODE/can_node.h ****  *
 472:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 473:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 474:../Dave/Generated/CAN_NODE/can_node.h ****  *   while (1)
 475:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 476:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 477:../Dave/Generated/CAN_NODE/can_node.h ****  *
 478:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 479:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 480:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 481:../Dave/Generated/CAN_NODE/can_node.h ****  */
 482:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 483:../Dave/Generated/CAN_NODE/can_node.h **** 
 484:../Dave/Generated/CAN_NODE/can_node.h **** /**
 485:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to disable the selected node events like node alert, LEC, Transfer OK, frame cou
 486:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t.<br>
 487:../Dave/Generated/CAN_NODE/can_node.h ****  * @param  node_event is the required node event to disable. @ref XMC_CAN_NODE_EVENT_t <br>
 488:../Dave/Generated/CAN_NODE/can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 489:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 490:../Dave/Generated/CAN_NODE/can_node.h ****  *
 491:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 492:../Dave/Generated/CAN_NODE/can_node.h ****  *
 493:../Dave/Generated/CAN_NODE/can_node.h ****  * This function disables the CAN node events. Using the API following node events can be disabled,
 494:../Dave/Generated/CAN_NODE/can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 495:../Dave/Generated/CAN_NODE/can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 496:../Dave/Generated/CAN_NODE/can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 497:../Dave/Generated/CAN_NODE/can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 498:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_DisableEvent().
 499:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 500:../Dave/Generated/CAN_NODE/can_node.h ****  *
 501:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 502:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 503:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 504:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 505:../Dave/Generated/CAN_NODE/can_node.h ****  *
 506:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 507:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 508:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 509:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 510:../Dave/Generated/CAN_NODE/can_node.h ****  *
 511:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 512:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 513:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 514:../Dave/Generated/CAN_NODE/can_node.h ****  *
 515:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code..
 516:../Dave/Generated/CAN_NODE/can_node.h ****  *
 517:../Dave/Generated/CAN_NODE/can_node.h ****  *     //  enable LEC event
 518:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 519:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable Alert event
 520:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 521:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable Transmit OK event
 522:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 523:../Dave/Generated/CAN_NODE/can_node.h ****  *     // enable CFCIE event
 524:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 525:../Dave/Generated/CAN_NODE/can_node.h ****  *
 526:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code
 527:../Dave/Generated/CAN_NODE/can_node.h ****  *
 528:../Dave/Generated/CAN_NODE/can_node.h ****  *
 529:../Dave/Generated/CAN_NODE/can_node.h ****  *     // For disabling LEC event
 530:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 531:../Dave/Generated/CAN_NODE/can_node.h ****  *     // For disabling Alert event
 532:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 533:../Dave/Generated/CAN_NODE/can_node.h ****  *     // For disabling Transmit OK event
 534:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 535:../Dave/Generated/CAN_NODE/can_node.h ****  *     // For disabling CFCIE event
 536:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 537:../Dave/Generated/CAN_NODE/can_node.h ****  *
 538:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 539:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 540:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 541:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 542:../Dave/Generated/CAN_NODE/can_node.h ****  *
 543:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 544:../Dave/Generated/CAN_NODE/can_node.h ****  *
 545:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 546:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 547:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 548:../Dave/Generated/CAN_NODE/can_node.h ****  */
 549:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 550:../Dave/Generated/CAN_NODE/can_node.h **** 
 551:../Dave/Generated/CAN_NODE/can_node.h **** /**
 552:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to retrieve the current status of the can node.
 553:../Dave/Generated/CAN_NODE/can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.
 554:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 555:../Dave/Generated/CAN_NODE/can_node.h ****  * @return status of type uint32_t.<BR>
 556:../Dave/Generated/CAN_NODE/can_node.h ****  *
 557:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 558:../Dave/Generated/CAN_NODE/can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 559:../Dave/Generated/CAN_NODE/can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 560:../Dave/Generated/CAN_NODE/can_node.h ****  * It reads NSR (node status register)register.
 561:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 562:../Dave/Generated/CAN_NODE/can_node.h ****  *
 563:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 564:../Dave/Generated/CAN_NODE/can_node.h ****  *
 565:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 566:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 567:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 568:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 569:../Dave/Generated/CAN_NODE/can_node.h ****  *
 570:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 571:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 572:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 573:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 574:../Dave/Generated/CAN_NODE/can_node.h ****  *   uint32_t status;
 575:../Dave/Generated/CAN_NODE/can_node.h ****  *
 576:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 577:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 578:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 579:../Dave/Generated/CAN_NODE/can_node.h ****  *
 580:../Dave/Generated/CAN_NODE/can_node.h ****  *     //Transmit MO data
 581:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 582:../Dave/Generated/CAN_NODE/can_node.h ****  *
 583:../Dave/Generated/CAN_NODE/can_node.h ****  *     status = CAN_NODE_GetStatus(HandlePtr1);
 584:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (status & XMC_CAN_NODE_STATUS_TX_OK)
 585:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 586:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Message transmitted successfully
 587:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 588:../Dave/Generated/CAN_NODE/can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 589:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 590:../Dave/Generated/CAN_NODE/can_node.h ****  *       // node alert warning event enabled
 591:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 592:../Dave/Generated/CAN_NODE/can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 593:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 594:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Bus off error
 595:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 596:../Dave/Generated/CAN_NODE/can_node.h ****  *
 597:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 598:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 599:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 600:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 601:../Dave/Generated/CAN_NODE/can_node.h ****  *
 602:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 603:../Dave/Generated/CAN_NODE/can_node.h ****  *
 604:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 605:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 606:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 607:../Dave/Generated/CAN_NODE/can_node.h ****  */
 608:../Dave/Generated/CAN_NODE/can_node.h **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t *handle);
 609:../Dave/Generated/CAN_NODE/can_node.h **** 
 610:../Dave/Generated/CAN_NODE/can_node.h **** 
 611:../Dave/Generated/CAN_NODE/can_node.h **** /**
 612:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to reset / clear the specific status of the can node.
 613:../Dave/Generated/CAN_NODE/can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.<br>
 614:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_node_status  is a node status enum. @ref XMC_CAN_NODE_STATUS_t <br>
 615:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 616:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 617:../Dave/Generated/CAN_NODE/can_node.h ****  *
 618:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 619:../Dave/Generated/CAN_NODE/can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 620:../Dave/Generated/CAN_NODE/can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 621:../Dave/Generated/CAN_NODE/can_node.h ****  * It reads NSR (node status register)register.
 622:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 623:../Dave/Generated/CAN_NODE/can_node.h ****  *
 624:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 625:../Dave/Generated/CAN_NODE/can_node.h ****  *
 626:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 627:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 628:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 629:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 630:../Dave/Generated/CAN_NODE/can_node.h ****  *
 631:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 632:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 633:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 634:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 635:../Dave/Generated/CAN_NODE/can_node.h ****  *   uint32_t status;
 636:../Dave/Generated/CAN_NODE/can_node.h ****  *
 637:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 638:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 639:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 640:../Dave/Generated/CAN_NODE/can_node.h ****  *
 641:../Dave/Generated/CAN_NODE/can_node.h ****  *     //Transmit MO data
 642:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 643:../Dave/Generated/CAN_NODE/can_node.h ****  *
 644:../Dave/Generated/CAN_NODE/can_node.h ****  *     status = CAN_NODE_GetStatus(HandlePtr1);
 645:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (status & XMC_CAN_NODE_STATUS_TX_OK)
 646:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 647:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Message transmitted successfully
 648:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_TX_OK);
 649:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 650:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 651:../Dave/Generated/CAN_NODE/can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 652:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 653:../Dave/Generated/CAN_NODE/can_node.h ****  *       // node alert warning event enabled
 654:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_ALERT_WARNING);
 655:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 656:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 657:../Dave/Generated/CAN_NODE/can_node.h ****  *     else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 658:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 659:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Bus off error
 660:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 661:../Dave/Generated/CAN_NODE/can_node.h ****  *
 662:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 663:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 664:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 665:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 666:../Dave/Generated/CAN_NODE/can_node.h ****  *
 667:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 668:../Dave/Generated/CAN_NODE/can_node.h ****  *
 669:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 670:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 671:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 672:../Dave/Generated/CAN_NODE/can_node.h ****  */
 673:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status);
 674:../Dave/Generated/CAN_NODE/can_node.h **** 
 675:../Dave/Generated/CAN_NODE/can_node.h **** /**
 676:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable CAN node for participation in CAN traffic.<br>
 677:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 678:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 679:../Dave/Generated/CAN_NODE/can_node.h ****  *
 680:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 681:../Dave/Generated/CAN_NODE/can_node.h ****  * Enables the CAN node for participation in the CAN traffic by configuring NCR.INIT and NCR.CANDIS
 682:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 683:../Dave/Generated/CAN_NODE/can_node.h ****  *
 684:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 685:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 686:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 687:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 688:../Dave/Generated/CAN_NODE/can_node.h ****  *
 689:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 690:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 691:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 692:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 693:../Dave/Generated/CAN_NODE/can_node.h ****  *
 694:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 695:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 696:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 697:../Dave/Generated/CAN_NODE/can_node.h ****  *
 698:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code..
 699:../Dave/Generated/CAN_NODE/can_node.h ****  *
 700:../Dave/Generated/CAN_NODE/can_node.h ****  *
 701:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Disable CAN node from participating in CAN traffic.
 702:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_Disable(HandlePtr1);
 703:../Dave/Generated/CAN_NODE/can_node.h ****  *
 704:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code..
 705:../Dave/Generated/CAN_NODE/can_node.h ****  *
 706:../Dave/Generated/CAN_NODE/can_node.h ****  *
 707:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Enable CAN node for participating in CAN traffic.
 708:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_Enable(HandlePtr1);
 709:../Dave/Generated/CAN_NODE/can_node.h ****  *
 710:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 711:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 712:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 713:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 714:../Dave/Generated/CAN_NODE/can_node.h ****  *
 715:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 716:../Dave/Generated/CAN_NODE/can_node.h ****  *
 717:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 718:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 719:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 720:../Dave/Generated/CAN_NODE/can_node.h ****  */
 721:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_Enable(const CAN_NODE_t *handle)
 722:../Dave/Generated/CAN_NODE/can_node.h **** {
 723:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_Enable: null pointer", handle != NULL);
 724:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_Enable(handle->node_ptr);
 725:../Dave/Generated/CAN_NODE/can_node.h **** }
 726:../Dave/Generated/CAN_NODE/can_node.h **** 
 727:../Dave/Generated/CAN_NODE/can_node.h **** /**
 728:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to disable CAN node from participating in CAN traffic.<br>
 729:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 730:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 731:../Dave/Generated/CAN_NODE/can_node.h ****  *
 732:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 733:../Dave/Generated/CAN_NODE/can_node.h ****  * Disables the CAN node from participating in the CAN traffic by configuring NCR.CANDIS bit.
 734:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 735:../Dave/Generated/CAN_NODE/can_node.h ****  *
 736:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 737:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 738:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 739:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 740:../Dave/Generated/CAN_NODE/can_node.h ****  *
 741:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 742:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 743:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 744:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 745:../Dave/Generated/CAN_NODE/can_node.h ****  *
 746:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 747:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 748:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 749:../Dave/Generated/CAN_NODE/can_node.h ****  *
 750:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code..
 751:../Dave/Generated/CAN_NODE/can_node.h ****  *
 752:../Dave/Generated/CAN_NODE/can_node.h ****  *
 753:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Disable CAN node from participating in CAN traffic.
 754:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_Disable(HandlePtr1);
 755:../Dave/Generated/CAN_NODE/can_node.h ****  *
 756:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code..
 757:../Dave/Generated/CAN_NODE/can_node.h ****  *
 758:../Dave/Generated/CAN_NODE/can_node.h ****  *
 759:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Enable CAN node for participating in CAN traffic.
 760:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_Enable(HandlePtr1);
 761:../Dave/Generated/CAN_NODE/can_node.h ****  *
 762:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 763:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 764:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 765:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 766:../Dave/Generated/CAN_NODE/can_node.h ****  *
 767:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 768:../Dave/Generated/CAN_NODE/can_node.h ****  *
 769:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 770:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 771:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 772:../Dave/Generated/CAN_NODE/can_node.h ****  */
 773:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_Disable(const CAN_NODE_t *handle)
 774:../Dave/Generated/CAN_NODE/can_node.h **** {
 775:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_Disable: null pointer", handle != NULL);
 776:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_Disable(handle->node_ptr);
 777:../Dave/Generated/CAN_NODE/can_node.h **** }
 778:../Dave/Generated/CAN_NODE/can_node.h **** 
 779:../Dave/Generated/CAN_NODE/can_node.h **** /**
 780:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable MO transmit event for the selected logical message object.
 781:../Dave/Generated/CAN_NODE/can_node.h ****  *         It sets the TXIE bit of the MOFCR register.
 782:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_lmo is a pointer to a logical message object structure.@ref CAN_NODE_LMO_t<br>
 783:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 784:../Dave/Generated/CAN_NODE/can_node.h ****  *
 785:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 786:../Dave/Generated/CAN_NODE/can_node.h ****  *
 787:../Dave/Generated/CAN_NODE/can_node.h ****  * This function to enable the MO transmit event for the selected logical message object.
 788:../Dave/Generated/CAN_NODE/can_node.h ****  * It configures MOFCR register. To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 789:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 790:../Dave/Generated/CAN_NODE/can_node.h ****  *
 791:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 792:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 793:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 794:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 795:../Dave/Generated/CAN_NODE/can_node.h ****  *
 796:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 797:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 798:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 799:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 800:../Dave/Generated/CAN_NODE/can_node.h ****  *
 801:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 802:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 803:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 804:../Dave/Generated/CAN_NODE/can_node.h ****  *
 805:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Enable the transmit event for the selected message object.
 806:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_MO_EnableTxEvent(HandlePtr1->lmobj_ptr[0]);
 807:../Dave/Generated/CAN_NODE/can_node.h ****  *
 808:../Dave/Generated/CAN_NODE/can_node.h ****  *     //transmit data from the message object.
 809:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 810:../Dave/Generated/CAN_NODE/can_node.h ****  *
 811:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Configure the interrupt APP and connect the transmit signal of the message object to NVIC
 812:../Dave/Generated/CAN_NODE/can_node.h ****  *     //After the successful transmission of message object, transmit event will be generated.
 813:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code
 814:../Dave/Generated/CAN_NODE/can_node.h ****  *
 815:../Dave/Generated/CAN_NODE/can_node.h ****  *
 816:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 817:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 818:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 819:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 820:../Dave/Generated/CAN_NODE/can_node.h ****  *
 821:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 822:../Dave/Generated/CAN_NODE/can_node.h ****  *
 823:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 824:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 825:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 826:../Dave/Generated/CAN_NODE/can_node.h ****  */
 827:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableTxEvent(const CAN_NODE_LMO_t *const can_lmo)
 828:../Dave/Generated/CAN_NODE/can_node.h **** {
 587              	 .loc 2 828 0
 588              	 .cfi_startproc
 589 0000 80B5     	 push {r7,lr}
 590              	.LCFI42:
 591              	 .cfi_def_cfa_offset 8
 592              	 .cfi_offset 7,-8
 593              	 .cfi_offset 14,-4
 594 0002 82B0     	 sub sp,sp,#8
 595              	.LCFI43:
 596              	 .cfi_def_cfa_offset 16
 597 0004 00AF     	 add r7,sp,#0
 598              	.LCFI44:
 599              	 .cfi_def_cfa_register 7
 600 0006 7860     	 str r0,[r7,#4]
 829:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableTxEvent: null pointer", can_lmo != NULL);
 830:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_TRANSMIT);
 601              	 .loc 2 830 0
 602 0008 7B68     	 ldr r3,[r7,#4]
 603 000a 1A68     	 ldr r2,[r3]
 604 000c 8023     	 mov r3,#128
 605 000e 9B02     	 lsl r3,r3,#10
 606 0010 101C     	 mov r0,r2
 607 0012 191C     	 mov r1,r3
 608 0014 FFF7FEFF 	 bl XMC_CAN_MO_EnableEvent
 831:../Dave/Generated/CAN_NODE/can_node.h **** }
 609              	 .loc 2 831 0
 610 0018 BD46     	 mov sp,r7
 611 001a 02B0     	 add sp,sp,#8
 612              	 
 613 001c 80BD     	 pop {r7,pc}
 614              	 .cfi_endproc
 615              	.LFE132:
 617 001e C046     	 .section .text.CAN_NODE_MO_EnableRxEvent,"ax",%progbits
 618              	 .align 2
 619              	 .code 16
 620              	 .thumb_func
 622              	CAN_NODE_MO_EnableRxEvent:
 623              	.LFB133:
 832:../Dave/Generated/CAN_NODE/can_node.h **** 
 833:../Dave/Generated/CAN_NODE/can_node.h **** /**
 834:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable MO receive event for the selected logical message object.
 835:../Dave/Generated/CAN_NODE/can_node.h ****  *        It sets the RXIE bit of the MOFCR register. The event will be generated after
 836:../Dave/Generated/CAN_NODE/can_node.h ****                reception of a CAN message.<br>
 837:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_lmo is a pointer to a logical message object structure @ref CAN_NODE_LMO_t.
 838:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 839:../Dave/Generated/CAN_NODE/can_node.h ****  *
 840:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 841:../Dave/Generated/CAN_NODE/can_node.h ****  *
 842:../Dave/Generated/CAN_NODE/can_node.h ****  * This function to enable the MO receive event for the selected logical message object.
 843:../Dave/Generated/CAN_NODE/can_node.h ****  * The event is generated after reception of a CAN message.
 844:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 845:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 846:../Dave/Generated/CAN_NODE/can_node.h ****  *
 847:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 848:../Dave/Generated/CAN_NODE/can_node.h ****  * 
 849:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 850:../Dave/Generated/CAN_NODE/can_node.h ****  * #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 851:../Dave/Generated/CAN_NODE/can_node.h ****  *
 852:../Dave/Generated/CAN_NODE/can_node.h ****  * int main(void)
 853:../Dave/Generated/CAN_NODE/can_node.h ****  * {
 854:../Dave/Generated/CAN_NODE/can_node.h ****  *   DAVE_STATUS_t init_status;
 855:../Dave/Generated/CAN_NODE/can_node.h ****  *   const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 856:../Dave/Generated/CAN_NODE/can_node.h ****  *
 857:../Dave/Generated/CAN_NODE/can_node.h ****  *   init_status = DAVE_Init();
 858:../Dave/Generated/CAN_NODE/can_node.h ****  *   if (init_status == DAVE_STATUS_SUCCESS)
 859:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 860:../Dave/Generated/CAN_NODE/can_node.h ****  *
 861:../Dave/Generated/CAN_NODE/can_node.h ****  *
 862:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_MO_EnableRxEvent(HandlePtr1->lmobj_ptr[0]);
 863:../Dave/Generated/CAN_NODE/can_node.h ****  *
 864:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Application code
 865:../Dave/Generated/CAN_NODE/can_node.h ****  *
 866:../Dave/Generated/CAN_NODE/can_node.h ****  *
 867:../Dave/Generated/CAN_NODE/can_node.h ****  *     // Configure the interrupt APP and connect the receive signal of the message object to NVIC 
 868:../Dave/Generated/CAN_NODE/can_node.h ****  *     //After the successful reception of message object, receive event will be generated.
 869:../Dave/Generated/CAN_NODE/can_node.h ****  *
 870:../Dave/Generated/CAN_NODE/can_node.h ****  *
 871:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 872:../Dave/Generated/CAN_NODE/can_node.h ****  *   // More code here
 873:../Dave/Generated/CAN_NODE/can_node.h ****  *   while(1)
 874:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 875:../Dave/Generated/CAN_NODE/can_node.h ****  *
 876:../Dave/Generated/CAN_NODE/can_node.h ****  *   }
 877:../Dave/Generated/CAN_NODE/can_node.h ****  *
 878:../Dave/Generated/CAN_NODE/can_node.h ****  *   return (1);
 879:../Dave/Generated/CAN_NODE/can_node.h ****  * }
 880:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcode
 881:../Dave/Generated/CAN_NODE/can_node.h ****  */
 882:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableRxEvent(const CAN_NODE_LMO_t *const can_lmo)
 883:../Dave/Generated/CAN_NODE/can_node.h **** {
 624              	 .loc 2 883 0
 625              	 .cfi_startproc
 626 0000 80B5     	 push {r7,lr}
 627              	.LCFI45:
 628              	 .cfi_def_cfa_offset 8
 629              	 .cfi_offset 7,-8
 630              	 .cfi_offset 14,-4
 631 0002 82B0     	 sub sp,sp,#8
 632              	.LCFI46:
 633              	 .cfi_def_cfa_offset 16
 634 0004 00AF     	 add r7,sp,#0
 635              	.LCFI47:
 636              	 .cfi_def_cfa_register 7
 637 0006 7860     	 str r0,[r7,#4]
 884:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableRxEvent: null pointer", can_lmo != NULL);
 885:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_RECEIVE);
 638              	 .loc 2 885 0
 639 0008 7B68     	 ldr r3,[r7,#4]
 640 000a 1A68     	 ldr r2,[r3]
 641 000c 8023     	 mov r3,#128
 642 000e 5B02     	 lsl r3,r3,#9
 643 0010 101C     	 mov r0,r2
 644 0012 191C     	 mov r1,r3
 645 0014 FFF7FEFF 	 bl XMC_CAN_MO_EnableEvent
 886:../Dave/Generated/CAN_NODE/can_node.h **** }
 646              	 .loc 2 886 0
 647 0018 BD46     	 mov sp,r7
 648 001a 02B0     	 add sp,sp,#8
 649              	 
 650 001c 80BD     	 pop {r7,pc}
 651              	 .cfi_endproc
 652              	.LFE133:
 654 001e C046     	 .section .text.CAN_NODE_SetNodeEvents,"ax",%progbits
 655              	 .align 2
 656              	 .code 16
 657              	 .thumb_func
 659              	CAN_NODE_SetNodeEvents:
 660              	.LFB137:
 661              	 .file 3 "../Dave/Generated/CAN_NODE/can_node.c"
   1:../Dave/Generated/CAN_NODE/can_node.c **** /**
   2:../Dave/Generated/CAN_NODE/can_node.c ****  * @file can_node.c
   3:../Dave/Generated/CAN_NODE/can_node.c ****  * @date 2019-06-24
   4:../Dave/Generated/CAN_NODE/can_node.c ****  *
   5:../Dave/Generated/CAN_NODE/can_node.c ****  * NOTE:
   6:../Dave/Generated/CAN_NODE/can_node.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/CAN_NODE/can_node.c ****  *
   8:../Dave/Generated/CAN_NODE/can_node.c ****  * @cond
   9:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  10:../Dave/Generated/CAN_NODE/can_node.c ****  * CAN_NODE v4.1.24 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:../Dave/Generated/CAN_NODE/can_node.c ****  *                   node baud rate and to enable/disable Node and MO events.
  12:../Dave/Generated/CAN_NODE/can_node.c ****  *
  13:../Dave/Generated/CAN_NODE/can_node.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:../Dave/Generated/CAN_NODE/can_node.c ****  * All rights reserved.
  15:../Dave/Generated/CAN_NODE/can_node.c ****  *                                             
  16:../Dave/Generated/CAN_NODE/can_node.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/CAN_NODE/can_node.c ****  * following conditions are met:
  18:../Dave/Generated/CAN_NODE/can_node.c ****  *
  19:../Dave/Generated/CAN_NODE/can_node.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/CAN_NODE/can_node.c ****  *   disclaimer.
  21:../Dave/Generated/CAN_NODE/can_node.c ****  *
  22:../Dave/Generated/CAN_NODE/can_node.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/CAN_NODE/can_node.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/CAN_NODE/can_node.c ****  *
  25:../Dave/Generated/CAN_NODE/can_node.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/CAN_NODE/can_node.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/CAN_NODE/can_node.c ****  *
  28:../Dave/Generated/CAN_NODE/can_node.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/CAN_NODE/can_node.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/CAN_NODE/can_node.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/CAN_NODE/can_node.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/CAN_NODE/can_node.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/CAN_NODE/can_node.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/CAN_NODE/can_node.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/CAN_NODE/can_node.c ****  *
  36:../Dave/Generated/CAN_NODE/can_node.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/CAN_NODE/can_node.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  39:../Dave/Generated/CAN_NODE/can_node.c ****  *
  40:../Dave/Generated/CAN_NODE/can_node.c ****  * Change History
  41:../Dave/Generated/CAN_NODE/can_node.c ****  * --------------
  42:../Dave/Generated/CAN_NODE/can_node.c ****  *
  43:../Dave/Generated/CAN_NODE/can_node.c ****  * 2015-02-16:
  44:../Dave/Generated/CAN_NODE/can_node.c ****  *     - Initial version<br>
  45:../Dave/Generated/CAN_NODE/can_node.c ****  *
  46:../Dave/Generated/CAN_NODE/can_node.c ****  * 2015-05-12:
  47:../Dave/Generated/CAN_NODE/can_node.c ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:../Dave/Generated/CAN_NODE/can_node.c ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(), CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSt
  49:../Dave/Generated/CAN_NODE/can_node.c ****  *
  50:../Dave/Generated/CAN_NODE/can_node.c ****  * 2018-06-21:
  51:../Dave/Generated/CAN_NODE/can_node.c ****  *     - Changed CAN_NODE_Init() to use  XMC_CAN_NODE_NominalBitTimeConfigureEx() to fix issues whe
  52:../Dave/Generated/CAN_NODE/can_node.c ****  * 
  53:../Dave/Generated/CAN_NODE/can_node.c ****  * 2019-06-24
  54:../Dave/Generated/CAN_NODE/can_node.c ****  *     - Changed CAN_NODE_Init() to reset analyzer mode
  55:../Dave/Generated/CAN_NODE/can_node.c ****  * 
  56:../Dave/Generated/CAN_NODE/can_node.c ****  * @endcond
  57:../Dave/Generated/CAN_NODE/can_node.c ****  *
  58:../Dave/Generated/CAN_NODE/can_node.c ****  */
  59:../Dave/Generated/CAN_NODE/can_node.c **** 
  60:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  61:../Dave/Generated/CAN_NODE/can_node.c ****  * HEADER FILES
  62:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  63:../Dave/Generated/CAN_NODE/can_node.c **** #include "can_node.h"
  64:../Dave/Generated/CAN_NODE/can_node.c **** 
  65:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  66:../Dave/Generated/CAN_NODE/can_node.c ****  * MACROS
  67:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  68:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MIN_BAUDRATE (100000U)
  69:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_BAUDRATE (1000000U)
  70:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_SAMPLE_POINT (100U)
  71:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_SJW    (3U)
  72:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MO_CLEAR_MASK (0x0fffU)
  73:../Dave/Generated/CAN_NODE/can_node.c **** 
  74:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  75:../Dave/Generated/CAN_NODE/can_node.c ****  * LOCAL DATA
  76:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  77:../Dave/Generated/CAN_NODE/can_node.c **** 
  78:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  79:../Dave/Generated/CAN_NODE/can_node.c ****  * LOCAL ROUTINES
  80:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  81:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodeEvents(const CAN_NODE_t *handle);
  82:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodePointer(const CAN_NODE_t *handle);
  83:../Dave/Generated/CAN_NODE/can_node.c **** 
  84:../Dave/Generated/CAN_NODE/can_node.c **** /**
  85:../Dave/Generated/CAN_NODE/can_node.c ****   * @brief  Function to enable the can node events like node alert,LEC,
  86:../Dave/Generated/CAN_NODE/can_node.c ****   *         Transfer OK and Frame counter overflow based on GUI configuration.
  87:../Dave/Generated/CAN_NODE/can_node.c ****   * @param  handle is a pointer pointing to APP data structure.
  88:../Dave/Generated/CAN_NODE/can_node.c ****   * @return None
  89:../Dave/Generated/CAN_NODE/can_node.c ****   */
  90:../Dave/Generated/CAN_NODE/can_node.c **** 
  91:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodeEvents(const CAN_NODE_t *handle)
  92:../Dave/Generated/CAN_NODE/can_node.c **** {
 662              	 .loc 3 92 0
 663              	 .cfi_startproc
 664 0000 80B5     	 push {r7,lr}
 665              	.LCFI48:
 666              	 .cfi_def_cfa_offset 8
 667              	 .cfi_offset 7,-8
 668              	 .cfi_offset 14,-4
 669 0002 84B0     	 sub sp,sp,#16
 670              	.LCFI49:
 671              	 .cfi_def_cfa_offset 24
 672 0004 00AF     	 add r7,sp,#0
 673              	.LCFI50:
 674              	 .cfi_def_cfa_register 7
 675 0006 7860     	 str r0,[r7,#4]
  93:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t lnode_event = 0U;
 676              	 .loc 3 93 0
 677 0008 0023     	 mov r3,#0
 678 000a FB60     	 str r3,[r7,#12]
  94:../Dave/Generated/CAN_NODE/can_node.c **** 
  95:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_lInit: handle null", handle != NULL);
  96:../Dave/Generated/CAN_NODE/can_node.c **** 
  97:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_SetNodePointer(handle); /* set node service pointer */
 679              	 .loc 3 97 0
 680 000c 7B68     	 ldr r3,[r7,#4]
 681 000e 181C     	 mov r0,r3
 682 0010 FFF7FEFF 	 bl CAN_NODE_SetNodePointer
  98:../Dave/Generated/CAN_NODE/can_node.c **** 
  99:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->txok_event_enable == true)
 683              	 .loc 3 99 0
 684 0014 7B68     	 ldr r3,[r7,#4]
 685 0016 A422     	 mov r2,#164
 686 0018 9B5C     	 ldrb r3,[r3,r2]
 687 001a 002B     	 cmp r3,#0
 688 001c 03D0     	 beq .L20
 100:../Dave/Generated/CAN_NODE/can_node.c ****   {
 101:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_TX_INT;
 689              	 .loc 3 101 0
 690 001e FB68     	 ldr r3,[r7,#12]
 691 0020 0222     	 mov r2,#2
 692 0022 1343     	 orr r3,r2
 693 0024 FB60     	 str r3,[r7,#12]
 694              	.L20:
 102:../Dave/Generated/CAN_NODE/can_node.c ****   }
 103:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->lec_event_enable == true)
 695              	 .loc 3 103 0
 696 0026 7B68     	 ldr r3,[r7,#4]
 697 0028 A322     	 mov r2,#163
 698 002a 9B5C     	 ldrb r3,[r3,r2]
 699 002c 002B     	 cmp r3,#0
 700 002e 03D0     	 beq .L21
 104:../Dave/Generated/CAN_NODE/can_node.c ****   {
 105:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_LEC;
 701              	 .loc 3 105 0
 702 0030 FB68     	 ldr r3,[r7,#12]
 703 0032 0422     	 mov r2,#4
 704 0034 1343     	 orr r3,r2
 705 0036 FB60     	 str r3,[r7,#12]
 706              	.L21:
 106:../Dave/Generated/CAN_NODE/can_node.c ****   }
 107:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->alert_event_enable == true)
 707              	 .loc 3 107 0
 708 0038 7B68     	 ldr r3,[r7,#4]
 709 003a A522     	 mov r2,#165
 710 003c 9B5C     	 ldrb r3,[r3,r2]
 711 003e 002B     	 cmp r3,#0
 712 0040 03D0     	 beq .L22
 108:../Dave/Generated/CAN_NODE/can_node.c ****   {
 109:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_ALERT;
 713              	 .loc 3 109 0
 714 0042 FB68     	 ldr r3,[r7,#12]
 715 0044 0822     	 mov r2,#8
 716 0046 1343     	 orr r3,r2
 717 0048 FB60     	 str r3,[r7,#12]
 718              	.L22:
 110:../Dave/Generated/CAN_NODE/can_node.c ****   }
 111:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_EnableEvent(handle->node_ptr, (XMC_CAN_NODE_EVENT_t)lnode_event);
 719              	 .loc 3 111 0
 720 004a 7B68     	 ldr r3,[r7,#4]
 721 004c 5A68     	 ldr r2,[r3,#4]
 722 004e FB68     	 ldr r3,[r7,#12]
 723 0050 101C     	 mov r0,r2
 724 0052 191C     	 mov r1,r3
 725 0054 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 112:../Dave/Generated/CAN_NODE/can_node.c **** 
 113:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->framecount_event_enable == true)
 726              	 .loc 3 113 0
 727 0058 7B68     	 ldr r3,[r7,#4]
 728 005a A622     	 mov r2,#166
 729 005c 9B5C     	 ldrb r3,[r3,r2]
 730 005e 002B     	 cmp r3,#0
 731 0060 07D0     	 beq .L19
 114:../Dave/Generated/CAN_NODE/can_node.c ****   {
 115:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_EnableEvent(handle->node_ptr, XMC_CAN_NODE_EVENT_CFCIE);
 732              	 .loc 3 115 0
 733 0062 7B68     	 ldr r3,[r7,#4]
 734 0064 5A68     	 ldr r2,[r3,#4]
 735 0066 8023     	 mov r3,#128
 736 0068 DB03     	 lsl r3,r3,#15
 737 006a 101C     	 mov r0,r2
 738 006c 191C     	 mov r1,r3
 739 006e FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 740              	.L19:
 116:../Dave/Generated/CAN_NODE/can_node.c ****   }
 117:../Dave/Generated/CAN_NODE/can_node.c **** 
 118:../Dave/Generated/CAN_NODE/can_node.c **** }
 741              	 .loc 3 118 0
 742 0072 BD46     	 mov sp,r7
 743 0074 04B0     	 add sp,sp,#16
 744              	 
 745 0076 80BD     	 pop {r7,pc}
 746              	 .cfi_endproc
 747              	.LFE137:
 749              	 .section .text.CAN_NODE_SetNodePointer,"ax",%progbits
 750              	 .align 2
 751              	 .code 16
 752              	 .thumb_func
 754              	CAN_NODE_SetNodePointer:
 755              	.LFB138:
 119:../Dave/Generated/CAN_NODE/can_node.c **** 
 120:../Dave/Generated/CAN_NODE/can_node.c **** /**
 121:../Dave/Generated/CAN_NODE/can_node.c ****   * @brief  Function to set the Node event pointer
 122:../Dave/Generated/CAN_NODE/can_node.c ****   *
 123:../Dave/Generated/CAN_NODE/can_node.c ****   */
 124:../Dave/Generated/CAN_NODE/can_node.c **** 
 125:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodePointer(const CAN_NODE_t *handle)
 126:../Dave/Generated/CAN_NODE/can_node.c **** {
 756              	 .loc 3 126 0
 757              	 .cfi_startproc
 758 0000 80B5     	 push {r7,lr}
 759              	.LCFI51:
 760              	 .cfi_def_cfa_offset 8
 761              	 .cfi_offset 7,-8
 762              	 .cfi_offset 14,-4
 763 0002 82B0     	 sub sp,sp,#8
 764              	.LCFI52:
 765              	 .cfi_def_cfa_offset 16
 766 0004 00AF     	 add r7,sp,#0
 767              	.LCFI53:
 768              	 .cfi_def_cfa_register 7
 769 0006 7860     	 str r0,[r7,#4]
 127:../Dave/Generated/CAN_NODE/can_node.c **** 
 128:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_SetNodePointer: handle null", handle != NULL);
 129:../Dave/Generated/CAN_NODE/can_node.c **** 
 130:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the alert event with the service request number */
 131:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_ALERT,
 770              	 .loc 3 131 0
 771 0008 7B68     	 ldr r3,[r7,#4]
 772 000a 5968     	 ldr r1,[r3,#4]
 132:../Dave/Generated/CAN_NODE/can_node.c ****                                                         handle->node_sr_ptr->alert_event_sr);
 773              	 .loc 3 132 0
 774 000c 7B68     	 ldr r3,[r7,#4]
 775 000e 8C22     	 mov r2,#140
 776 0010 9B58     	 ldr r3,[r3,r2]
 777 0012 1B78     	 ldrb r3,[r3]
 131:../Dave/Generated/CAN_NODE/can_node.c ****                                                         handle->node_sr_ptr->alert_event_sr);
 778              	 .loc 3 131 0
 779 0014 081C     	 mov r0,r1
 780 0016 0021     	 mov r1,#0
 781 0018 1A1C     	 mov r2,r3
 782 001a FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 133:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the LEC event with the service request number */
 134:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_LEC,
 783              	 .loc 3 134 0
 784 001e 7B68     	 ldr r3,[r7,#4]
 785 0020 5968     	 ldr r1,[r3,#4]
 135:../Dave/Generated/CAN_NODE/can_node.c ****                                                          handle->node_sr_ptr->lec_event_sr);
 786              	 .loc 3 135 0
 787 0022 7B68     	 ldr r3,[r7,#4]
 788 0024 8C22     	 mov r2,#140
 789 0026 9B58     	 ldr r3,[r3,r2]
 790 0028 5B78     	 ldrb r3,[r3,#1]
 134:../Dave/Generated/CAN_NODE/can_node.c ****                                                          handle->node_sr_ptr->lec_event_sr);
 791              	 .loc 3 134 0
 792 002a 081C     	 mov r0,r1
 793 002c 0421     	 mov r1,#4
 794 002e 1A1C     	 mov r2,r3
 795 0030 FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 136:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the TXOK event with the service request number */
 137:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK,
 796              	 .loc 3 137 0
 797 0034 7B68     	 ldr r3,[r7,#4]
 798 0036 5968     	 ldr r1,[r3,#4]
 138:../Dave/Generated/CAN_NODE/can_node.c ****                                                                handle->node_sr_ptr->txok_event_sr);
 799              	 .loc 3 138 0
 800 0038 7B68     	 ldr r3,[r7,#4]
 801 003a 8C22     	 mov r2,#140
 802 003c 9B58     	 ldr r3,[r3,r2]
 803 003e 9B78     	 ldrb r3,[r3,#2]
 137:../Dave/Generated/CAN_NODE/can_node.c ****                                                                handle->node_sr_ptr->txok_event_sr);
 804              	 .loc 3 137 0
 805 0040 081C     	 mov r0,r1
 806 0042 0821     	 mov r1,#8
 807 0044 1A1C     	 mov r2,r3
 808 0046 FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 139:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the Frame counter event with the service request number 
 140:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER,
 809              	 .loc 3 140 0
 810 004a 7B68     	 ldr r3,[r7,#4]
 811 004c 5968     	 ldr r1,[r3,#4]
 141:../Dave/Generated/CAN_NODE/can_node.c ****                                                              handle->node_sr_ptr->framecount_event_
 812              	 .loc 3 141 0
 813 004e 7B68     	 ldr r3,[r7,#4]
 814 0050 8C22     	 mov r2,#140
 815 0052 9B58     	 ldr r3,[r3,r2]
 816 0054 DB78     	 ldrb r3,[r3,#3]
 140:../Dave/Generated/CAN_NODE/can_node.c ****                                                              handle->node_sr_ptr->framecount_event_
 817              	 .loc 3 140 0
 818 0056 081C     	 mov r0,r1
 819 0058 0C21     	 mov r1,#12
 820 005a 1A1C     	 mov r2,r3
 821 005c FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 142:../Dave/Generated/CAN_NODE/can_node.c **** 
 143:../Dave/Generated/CAN_NODE/can_node.c **** }
 822              	 .loc 3 143 0
 823 0060 BD46     	 mov sp,r7
 824 0062 02B0     	 add sp,sp,#8
 825              	 
 826 0064 80BD     	 pop {r7,pc}
 827              	 .cfi_endproc
 828              	.LFE138:
 830 0066 C046     	 .section .text.CAN_NODE_GetAppVersion,"ax",%progbits
 831              	 .align 2
 832              	 .global CAN_NODE_GetAppVersion
 833              	 .code 16
 834              	 .thumb_func
 836              	CAN_NODE_GetAppVersion:
 837              	.LFB139:
 144:../Dave/Generated/CAN_NODE/can_node.c **** 
 145:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
 146:../Dave/Generated/CAN_NODE/can_node.c ****  * API IMPLEMENTATION
 147:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
 148:../Dave/Generated/CAN_NODE/can_node.c **** 
 149:../Dave/Generated/CAN_NODE/can_node.c **** /*  API to retrieve the version of the CAN_NODE APP */
 150:../Dave/Generated/CAN_NODE/can_node.c **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion()
 151:../Dave/Generated/CAN_NODE/can_node.c **** {
 838              	 .loc 3 151 0
 839              	 .cfi_startproc
 840 0000 80B5     	 push {r7,lr}
 841              	.LCFI54:
 842              	 .cfi_def_cfa_offset 8
 843              	 .cfi_offset 7,-8
 844              	 .cfi_offset 14,-4
 845 0002 82B0     	 sub sp,sp,#8
 846              	.LCFI55:
 847              	 .cfi_def_cfa_offset 16
 848 0004 00AF     	 add r7,sp,#0
 849              	.LCFI56:
 850              	 .cfi_def_cfa_register 7
 152:../Dave/Generated/CAN_NODE/can_node.c ****   DAVE_APP_VERSION_t version;
 153:../Dave/Generated/CAN_NODE/can_node.c **** 
 154:../Dave/Generated/CAN_NODE/can_node.c ****   version.major = (uint8_t)CAN_NODE_MAJOR_VERSION;
 851              	 .loc 3 154 0
 852 0006 3B1C     	 mov r3,r7
 853 0008 0422     	 mov r2,#4
 854 000a 1A70     	 strb r2,[r3]
 155:../Dave/Generated/CAN_NODE/can_node.c ****   version.minor = (uint8_t)CAN_NODE_MINOR_VERSION;
 855              	 .loc 3 155 0
 856 000c 3B1C     	 mov r3,r7
 857 000e 0122     	 mov r2,#1
 858 0010 5A70     	 strb r2,[r3,#1]
 156:../Dave/Generated/CAN_NODE/can_node.c ****   version.patch = (uint8_t)CAN_NODE_PATCH_VERSION;
 859              	 .loc 3 156 0
 860 0012 3B1C     	 mov r3,r7
 861 0014 1822     	 mov r2,#24
 862 0016 9A70     	 strb r2,[r3,#2]
 157:../Dave/Generated/CAN_NODE/can_node.c **** 
 158:../Dave/Generated/CAN_NODE/can_node.c ****   return (version);
 863              	 .loc 3 158 0
 864 0018 3B1D     	 add r3,r7,#4
 865 001a 3A1C     	 mov r2,r7
 866 001c 1188     	 ldrh r1,[r2]
 867 001e 1980     	 strh r1,[r3]
 868 0020 9278     	 ldrb r2,[r2,#2]
 869 0022 9A70     	 strb r2,[r3,#2]
 870 0024 3A1D     	 add r2,r7,#4
 871 0026 0023     	 mov r3,#0
 872 0028 1178     	 ldrb r1,[r2]
 873 002a FF20     	 mov r0,#255
 874 002c 0140     	 and r1,r0
 875 002e FF20     	 mov r0,#255
 876 0030 8343     	 bic r3,r0
 877 0032 0B43     	 orr r3,r1
 878 0034 5178     	 ldrb r1,[r2,#1]
 879 0036 FF20     	 mov r0,#255
 880 0038 0140     	 and r1,r0
 881 003a 0902     	 lsl r1,r1,#8
 882 003c 0648     	 ldr r0,.L27
 883 003e 0340     	 and r3,r0
 884 0040 0B43     	 orr r3,r1
 885 0042 9278     	 ldrb r2,[r2,#2]
 886 0044 FF21     	 mov r1,#255
 887 0046 0A40     	 and r2,r1
 888 0048 1204     	 lsl r2,r2,#16
 889 004a 0449     	 ldr r1,.L27+4
 890 004c 0B40     	 and r3,r1
 891 004e 1343     	 orr r3,r2
 159:../Dave/Generated/CAN_NODE/can_node.c **** }
 892              	 .loc 3 159 0
 893 0050 181C     	 mov r0,r3
 894 0052 BD46     	 mov sp,r7
 895 0054 02B0     	 add sp,sp,#8
 896              	 
 897 0056 80BD     	 pop {r7,pc}
 898              	.L28:
 899              	 .align 2
 900              	.L27:
 901 0058 FF00FFFF 	 .word -65281
 902 005c FFFF00FF 	 .word -16711681
 903              	 .cfi_endproc
 904              	.LFE139:
 906              	 .section .text.CAN_NODE_EnableEvent,"ax",%progbits
 907              	 .align 2
 908              	 .global CAN_NODE_EnableEvent
 909              	 .code 16
 910              	 .thumb_func
 912              	CAN_NODE_EnableEvent:
 913              	.LFB140:
 160:../Dave/Generated/CAN_NODE/can_node.c **** 
 161:../Dave/Generated/CAN_NODE/can_node.c **** /* API to enable the can node events like node alert,LEC,Transfer OK and Frame counter overflow. */
 162:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event)
 163:../Dave/Generated/CAN_NODE/can_node.c **** {
 914              	 .loc 3 163 0
 915              	 .cfi_startproc
 916 0000 80B5     	 push {r7,lr}
 917              	.LCFI57:
 918              	 .cfi_def_cfa_offset 8
 919              	 .cfi_offset 7,-8
 920              	 .cfi_offset 14,-4
 921 0002 84B0     	 sub sp,sp,#16
 922              	.LCFI58:
 923              	 .cfi_def_cfa_offset 24
 924 0004 00AF     	 add r7,sp,#0
 925              	.LCFI59:
 926              	 .cfi_def_cfa_register 7
 927 0006 7860     	 str r0,[r7,#4]
 928 0008 3960     	 str r1,[r7]
 164:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_EnableEvent: handle null", handle != NULL);
 165:../Dave/Generated/CAN_NODE/can_node.c **** 
 166:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 929              	 .loc 3 166 0
 930 000a 7B68     	 ldr r3,[r7,#4]
 931 000c 5B68     	 ldr r3,[r3,#4]
 932 000e FB60     	 str r3,[r7,#12]
 167:../Dave/Generated/CAN_NODE/can_node.c **** 
 168:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_EnableEvent(can_node,node_event);
 933              	 .loc 3 168 0
 934 0010 FA68     	 ldr r2,[r7,#12]
 935 0012 3B68     	 ldr r3,[r7]
 936 0014 101C     	 mov r0,r2
 937 0016 191C     	 mov r1,r3
 938 0018 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 169:../Dave/Generated/CAN_NODE/can_node.c **** 
 170:../Dave/Generated/CAN_NODE/can_node.c **** }
 939              	 .loc 3 170 0
 940 001c BD46     	 mov sp,r7
 941 001e 04B0     	 add sp,sp,#16
 942              	 
 943 0020 80BD     	 pop {r7,pc}
 944              	 .cfi_endproc
 945              	.LFE140:
 947 0022 C046     	 .section .text.CAN_NODE_ConfigBaudrate,"ax",%progbits
 948              	 .align 2
 949              	 .global CAN_NODE_ConfigBaudrate
 950              	 .code 16
 951              	 .thumb_func
 953              	CAN_NODE_ConfigBaudrate:
 954              	.LFB141:
 171:../Dave/Generated/CAN_NODE/can_node.c **** 
 172:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to configure the baud rate based on UI configuration. */
 173:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 174:../Dave/Generated/CAN_NODE/can_node.c **** {
 955              	 .loc 3 174 0
 956              	 .cfi_startproc
 957 0000 80B5     	 push {r7,lr}
 958              	.LCFI60:
 959              	 .cfi_def_cfa_offset 8
 960              	 .cfi_offset 7,-8
 961              	 .cfi_offset 14,-4
 962 0002 86B0     	 sub sp,sp,#24
 963              	.LCFI61:
 964              	 .cfi_def_cfa_offset 32
 965 0004 00AF     	 add r7,sp,#0
 966              	.LCFI62:
 967              	 .cfi_def_cfa_register 7
 968 0006 F860     	 str r0,[r7,#12]
 969 0008 B960     	 str r1,[r7,#8]
 970 000a 191C     	 mov r1,r3
 971 000c BB1D     	 add r3,r7,#6
 972 000e 1A80     	 strh r2,[r3]
 973 0010 7B1D     	 add r3,r7,#5
 974 0012 0A1C     	 add r2,r1,#0
 975 0014 1A70     	 strb r2,[r3]
 175:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 976              	 .loc 3 175 0
 977 0016 FB68     	 ldr r3,[r7,#12]
 978 0018 5B68     	 ldr r3,[r3,#4]
 979 001a 7B61     	 str r3,[r7,#20]
 176:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time = handle->baudrate_config;
 980              	 .loc 3 176 0
 981 001c FB68     	 ldr r3,[r7,#12]
 982 001e 9B68     	 ldr r3,[r3,#8]
 983 0020 3B61     	 str r3,[r7,#16]
 177:../Dave/Generated/CAN_NODE/can_node.c **** 
 178:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: handle null", handle != NULL);
 179:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: baud rate invalid", (baudrate >= CAN_NODE_MIN_BAUDRATE)
 180:../Dave/Generated/CAN_NODE/can_node.c ****                                                                      && (baudrate <= CAN_NODE_MAX_B
 181:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: sample_point invalid", (sample_point >= 0U) &&
 182:../Dave/Generated/CAN_NODE/can_node.c ****                                                                         (sample_point <= CAN_NODE_M
 183:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: Synchronization jump width invalid", (sjw >= 0U) && (sjw <= 
 184:../Dave/Generated/CAN_NODE/can_node.c **** 
 185:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->baudrate = baudrate;
 984              	 .loc 3 185 0
 985 0022 3B69     	 ldr r3,[r7,#16]
 986 0024 BA68     	 ldr r2,[r7,#8]
 987 0026 5A60     	 str r2,[r3,#4]
 186:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->sample_point = (sample_point * CAN_NODE_MAX_SAMPLE_POINT);
 988              	 .loc 3 186 0
 989 0028 BB1D     	 add r3,r7,#6
 990 002a 1B88     	 ldrh r3,[r3]
 991 002c 6422     	 mov r2,#100
 992 002e 5343     	 mul r3,r2
 993 0030 9AB2     	 uxth r2,r3
 994 0032 3B69     	 ldr r3,[r7,#16]
 995 0034 1A81     	 strh r2,[r3,#8]
 187:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->sjw = (uint16_t)sjw;
 996              	 .loc 3 187 0
 997 0036 7B1D     	 add r3,r7,#5
 998 0038 1B78     	 ldrb r3,[r3]
 999 003a 9AB2     	 uxth r2,r3
 1000 003c 3B69     	 ldr r3,[r7,#16]
 1001 003e 5A81     	 strh r2,[r3,#10]
 188:../Dave/Generated/CAN_NODE/can_node.c **** 
 189:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_NominalBitTimeConfigure(can_node, can_bit_time);
 1002              	 .loc 3 189 0
 1003 0040 7A69     	 ldr r2,[r7,#20]
 1004 0042 3B69     	 ldr r3,[r7,#16]
 1005 0044 101C     	 mov r0,r2
 1006 0046 191C     	 mov r1,r3
 1007 0048 FFF7FEFF 	 bl XMC_CAN_NODE_NominalBitTimeConfigure
 190:../Dave/Generated/CAN_NODE/can_node.c **** }
 1008              	 .loc 3 190 0
 1009 004c BD46     	 mov sp,r7
 1010 004e 06B0     	 add sp,sp,#24
 1011              	 
 1012 0050 80BD     	 pop {r7,pc}
 1013              	 .cfi_endproc
 1014              	.LFE141:
 1016 0052 C046     	 .section .text.CAN_NODE_MO_Init,"ax",%progbits
 1017              	 .align 2
 1018              	 .global CAN_NODE_MO_Init
 1019              	 .code 16
 1020              	 .thumb_func
 1022              	CAN_NODE_MO_Init:
 1023              	.LFB142:
 191:../Dave/Generated/CAN_NODE/can_node.c **** 
 192:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to initialize the CAN MO based on UI configuration. */
 193:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr)
 194:../Dave/Generated/CAN_NODE/can_node.c **** {
 1024              	 .loc 3 194 0
 1025              	 .cfi_startproc
 1026 0000 80B5     	 push {r7,lr}
 1027              	.LCFI63:
 1028              	 .cfi_def_cfa_offset 8
 1029              	 .cfi_offset 7,-8
 1030              	 .cfi_offset 14,-4
 1031 0002 82B0     	 sub sp,sp,#8
 1032              	.LCFI64:
 1033              	 .cfi_def_cfa_offset 16
 1034 0004 00AF     	 add r7,sp,#0
 1035              	.LCFI65:
 1036              	 .cfi_def_cfa_register 7
 1037 0006 7860     	 str r0,[r7,#4]
 195:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Init: lmo_ptr null", lmo_ptr != NULL);
 196:../Dave/Generated/CAN_NODE/can_node.c **** 
 197:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_MO_Config(lmo_ptr->mo_ptr);
 1038              	 .loc 3 197 0
 1039 0008 7B68     	 ldr r3,[r7,#4]
 1040 000a 1B68     	 ldr r3,[r3]
 1041 000c 181C     	 mov r0,r3
 1042 000e FFF7FEFF 	 bl XMC_CAN_MO_Config
 198:../Dave/Generated/CAN_NODE/can_node.c **** 
 199:../Dave/Generated/CAN_NODE/can_node.c ****   if (lmo_ptr->tx_event_enable == true)
 1043              	 .loc 3 199 0
 1044 0012 7B68     	 ldr r3,[r7,#4]
 1045 0014 DB79     	 ldrb r3,[r3,#7]
 1046 0016 002B     	 cmp r3,#0
 1047 0018 0CD0     	 beq .L32
 200:../Dave/Generated/CAN_NODE/can_node.c ****   {
 201:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_MO_SetEventNodePointer(lmo_ptr->mo_ptr, XMC_CAN_MO_POINTER_EVENT_TRANSMIT, lmo_ptr->tx_
 1048              	 .loc 3 201 0
 1049 001a 7B68     	 ldr r3,[r7,#4]
 1050 001c 1A68     	 ldr r2,[r3]
 1051 001e 7B68     	 ldr r3,[r7,#4]
 1052 0020 5B79     	 ldrb r3,[r3,#5]
 1053 0022 101C     	 mov r0,r2
 1054 0024 0421     	 mov r1,#4
 1055 0026 1A1C     	 mov r2,r3
 1056 0028 FFF7FEFF 	 bl XMC_CAN_MO_SetEventNodePointer
 202:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_MO_EnableTxEvent(lmo_ptr);
 1057              	 .loc 3 202 0
 1058 002c 7B68     	 ldr r3,[r7,#4]
 1059 002e 181C     	 mov r0,r3
 1060 0030 FFF7FEFF 	 bl CAN_NODE_MO_EnableTxEvent
 1061              	.L32:
 203:../Dave/Generated/CAN_NODE/can_node.c ****   }
 204:../Dave/Generated/CAN_NODE/can_node.c ****   if (lmo_ptr->rx_event_enable == true)
 1062              	 .loc 3 204 0
 1063 0034 7B68     	 ldr r3,[r7,#4]
 1064 0036 1B7A     	 ldrb r3,[r3,#8]
 1065 0038 002B     	 cmp r3,#0
 1066 003a 0CD0     	 beq .L31
 205:../Dave/Generated/CAN_NODE/can_node.c ****   {
 206:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_MO_SetEventNodePointer(lmo_ptr->mo_ptr, XMC_CAN_MO_POINTER_EVENT_RECEIVE, lmo_ptr->rx_s
 1067              	 .loc 3 206 0
 1068 003c 7B68     	 ldr r3,[r7,#4]
 1069 003e 1A68     	 ldr r2,[r3]
 1070 0040 7B68     	 ldr r3,[r7,#4]
 1071 0042 9B79     	 ldrb r3,[r3,#6]
 1072 0044 101C     	 mov r0,r2
 1073 0046 0021     	 mov r1,#0
 1074 0048 1A1C     	 mov r2,r3
 1075 004a FFF7FEFF 	 bl XMC_CAN_MO_SetEventNodePointer
 207:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_MO_EnableRxEvent(lmo_ptr);
 1076              	 .loc 3 207 0
 1077 004e 7B68     	 ldr r3,[r7,#4]
 1078 0050 181C     	 mov r0,r3
 1079 0052 FFF7FEFF 	 bl CAN_NODE_MO_EnableRxEvent
 1080              	.L31:
 208:../Dave/Generated/CAN_NODE/can_node.c ****   }
 209:../Dave/Generated/CAN_NODE/can_node.c **** 
 210:../Dave/Generated/CAN_NODE/can_node.c **** }
 1081              	 .loc 3 210 0
 1082 0056 BD46     	 mov sp,r7
 1083 0058 02B0     	 add sp,sp,#8
 1084              	 
 1085 005a 80BD     	 pop {r7,pc}
 1086              	 .cfi_endproc
 1087              	.LFE142:
 1089              	 .section .text.CAN_NODE_MO_Transmit,"ax",%progbits
 1090              	 .align 2
 1091              	 .global CAN_NODE_MO_Transmit
 1092              	 .code 16
 1093              	 .thumb_func
 1095              	CAN_NODE_MO_Transmit:
 1096              	.LFB143:
 211:../Dave/Generated/CAN_NODE/can_node.c **** 
 212:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to transmit the can MO frame.  */
 213:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_Transmit(const CAN_NODE_LMO_t *lmo_ptr)
 214:../Dave/Generated/CAN_NODE/can_node.c **** {
 1097              	 .loc 3 214 0
 1098              	 .cfi_startproc
 1099 0000 90B5     	 push {r4,r7,lr}
 1100              	.LCFI66:
 1101              	 .cfi_def_cfa_offset 12
 1102              	 .cfi_offset 4,-12
 1103              	 .cfi_offset 7,-8
 1104              	 .cfi_offset 14,-4
 1105 0002 85B0     	 sub sp,sp,#20
 1106              	.LCFI67:
 1107              	 .cfi_def_cfa_offset 32
 1108 0004 00AF     	 add r7,sp,#0
 1109              	.LCFI68:
 1110              	 .cfi_def_cfa_register 7
 1111 0006 7860     	 str r0,[r7,#4]
 215:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1112              	 .loc 3 215 0
 1113 0008 0F23     	 mov r3,#15
 1114 000a FB18     	 add r3,r7,r3
 1115 000c 0022     	 mov r2,#0
 1116 000e 1A70     	 strb r2,[r3]
 216:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Transmit: lmo_ptr null", lmo_ptr != NULL);
 217:../Dave/Generated/CAN_NODE/can_node.c **** 
 218:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_Transmit(lmo_ptr->mo_ptr);
 1117              	 .loc 3 218 0
 1118 0010 7B68     	 ldr r3,[r7,#4]
 1119 0012 1B68     	 ldr r3,[r3]
 1120 0014 0F22     	 mov r2,#15
 1121 0016 BC18     	 add r4,r7,r2
 1122 0018 181C     	 mov r0,r3
 1123 001a FFF7FEFF 	 bl XMC_CAN_MO_Transmit
 1124 001e 031C     	 mov r3,r0
 1125 0020 2370     	 strb r3,[r4]
 219:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1126              	 .loc 3 219 0
 1127 0022 0F23     	 mov r3,#15
 1128 0024 FB18     	 add r3,r7,r3
 1129 0026 1B78     	 ldrb r3,[r3]
 220:../Dave/Generated/CAN_NODE/can_node.c **** }
 1130              	 .loc 3 220 0
 1131 0028 181C     	 mov r0,r3
 1132 002a BD46     	 mov sp,r7
 1133 002c 05B0     	 add sp,sp,#20
 1134              	 
 1135 002e 90BD     	 pop {r4,r7,pc}
 1136              	 .cfi_endproc
 1137              	.LFE143:
 1139              	 .section .text.CAN_NODE_MO_Receive,"ax",%progbits
 1140              	 .align 2
 1141              	 .global CAN_NODE_MO_Receive
 1142              	 .code 16
 1143              	 .thumb_func
 1145              	CAN_NODE_MO_Receive:
 1146              	.LFB144:
 221:../Dave/Generated/CAN_NODE/can_node.c **** 
 222:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the received CAN message from the selected message object. */
 223:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_Receive( CAN_NODE_LMO_t *lmo_ptr)
 224:../Dave/Generated/CAN_NODE/can_node.c **** {
 1147              	 .loc 3 224 0
 1148              	 .cfi_startproc
 1149 0000 90B5     	 push {r4,r7,lr}
 1150              	.LCFI69:
 1151              	 .cfi_def_cfa_offset 12
 1152              	 .cfi_offset 4,-12
 1153              	 .cfi_offset 7,-8
 1154              	 .cfi_offset 14,-4
 1155 0002 85B0     	 sub sp,sp,#20
 1156              	.LCFI70:
 1157              	 .cfi_def_cfa_offset 32
 1158 0004 00AF     	 add r7,sp,#0
 1159              	.LCFI71:
 1160              	 .cfi_def_cfa_register 7
 1161 0006 7860     	 str r0,[r7,#4]
 225:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1162              	 .loc 3 225 0
 1163 0008 0F23     	 mov r3,#15
 1164 000a FB18     	 add r3,r7,r3
 1165 000c 0022     	 mov r2,#0
 1166 000e 1A70     	 strb r2,[r3]
 226:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Receive: lmo_ptr null", lmo_ptr != NULL);
 227:../Dave/Generated/CAN_NODE/can_node.c **** 
 228:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_Receive(lmo_ptr->mo_ptr);
 1167              	 .loc 3 228 0
 1168 0010 7B68     	 ldr r3,[r7,#4]
 1169 0012 1B68     	 ldr r3,[r3]
 1170 0014 0F22     	 mov r2,#15
 1171 0016 BC18     	 add r4,r7,r2
 1172 0018 181C     	 mov r0,r3
 1173 001a FFF7FEFF 	 bl XMC_CAN_MO_Receive
 1174 001e 031C     	 mov r3,r0
 1175 0020 2370     	 strb r3,[r4]
 229:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1176              	 .loc 3 229 0
 1177 0022 0F23     	 mov r3,#15
 1178 0024 FB18     	 add r3,r7,r3
 1179 0026 1B78     	 ldrb r3,[r3]
 230:../Dave/Generated/CAN_NODE/can_node.c **** }
 1180              	 .loc 3 230 0
 1181 0028 181C     	 mov r0,r3
 1182 002a BD46     	 mov sp,r7
 1183 002c 05B0     	 add sp,sp,#20
 1184              	 
 1185 002e 90BD     	 pop {r4,r7,pc}
 1186              	 .cfi_endproc
 1187              	.LFE144:
 1189              	 .section .text.CAN_NODE_MO_ReceiveData,"ax",%progbits
 1190              	 .align 2
 1191              	 .global CAN_NODE_MO_ReceiveData
 1192              	 .code 16
 1193              	 .thumb_func
 1195              	CAN_NODE_MO_ReceiveData:
 1196              	.LFB145:
 231:../Dave/Generated/CAN_NODE/can_node.c **** 
 232:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the received CAN message data from the selected message object excluding other 
 233:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_ReceiveData( CAN_NODE_LMO_t *lmo_ptr)
 234:../Dave/Generated/CAN_NODE/can_node.c **** {
 1197              	 .loc 3 234 0
 1198              	 .cfi_startproc
 1199 0000 90B5     	 push {r4,r7,lr}
 1200              	.LCFI72:
 1201              	 .cfi_def_cfa_offset 12
 1202              	 .cfi_offset 4,-12
 1203              	 .cfi_offset 7,-8
 1204              	 .cfi_offset 14,-4
 1205 0002 85B0     	 sub sp,sp,#20
 1206              	.LCFI73:
 1207              	 .cfi_def_cfa_offset 32
 1208 0004 00AF     	 add r7,sp,#0
 1209              	.LCFI74:
 1210              	 .cfi_def_cfa_register 7
 1211 0006 7860     	 str r0,[r7,#4]
 235:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1212              	 .loc 3 235 0
 1213 0008 0F23     	 mov r3,#15
 1214 000a FB18     	 add r3,r7,r3
 1215 000c 0022     	 mov r2,#0
 1216 000e 1A70     	 strb r2,[r3]
 236:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ReceiveData: lmo_ptr null", lmo_ptr != NULL);
 237:../Dave/Generated/CAN_NODE/can_node.c **** 
 238:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_ReceiveData(lmo_ptr->mo_ptr);
 1217              	 .loc 3 238 0
 1218 0010 7B68     	 ldr r3,[r7,#4]
 1219 0012 1B68     	 ldr r3,[r3]
 1220 0014 0F22     	 mov r2,#15
 1221 0016 BC18     	 add r4,r7,r2
 1222 0018 181C     	 mov r0,r3
 1223 001a FFF7FEFF 	 bl XMC_CAN_MO_ReceiveData
 1224 001e 031C     	 mov r3,r0
 1225 0020 2370     	 strb r3,[r4]
 239:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1226              	 .loc 3 239 0
 1227 0022 0F23     	 mov r3,#15
 1228 0024 FB18     	 add r3,r7,r3
 1229 0026 1B78     	 ldrb r3,[r3]
 240:../Dave/Generated/CAN_NODE/can_node.c **** }
 1230              	 .loc 3 240 0
 1231 0028 181C     	 mov r0,r3
 1232 002a BD46     	 mov sp,r7
 1233 002c 05B0     	 add sp,sp,#20
 1234              	 
 1235 002e 90BD     	 pop {r4,r7,pc}
 1236              	 .cfi_endproc
 1237              	.LFE145:
 1239              	 .section .text.CAN_NODE_MO_UpdateData,"ax",%progbits
 1240              	 .align 2
 1241              	 .global CAN_NODE_MO_UpdateData
 1242              	 .code 16
 1243              	 .thumb_func
 1245              	CAN_NODE_MO_UpdateData:
 1246              	.LFB146:
 241:../Dave/Generated/CAN_NODE/can_node.c **** 
 242:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to updates the data for the CAN Message Object. */
 243:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_UpdateData(const CAN_NODE_LMO_t *const lmo_ptr, uint8_t *array_data)
 244:../Dave/Generated/CAN_NODE/can_node.c **** {
 1247              	 .loc 3 244 0
 1248              	 .cfi_startproc
 1249 0000 90B5     	 push {r4,r7,lr}
 1250              	.LCFI75:
 1251              	 .cfi_def_cfa_offset 12
 1252              	 .cfi_offset 4,-12
 1253              	 .cfi_offset 7,-8
 1254              	 .cfi_offset 14,-4
 1255 0002 85B0     	 sub sp,sp,#20
 1256              	.LCFI76:
 1257              	 .cfi_def_cfa_offset 32
 1258 0004 00AF     	 add r7,sp,#0
 1259              	.LCFI77:
 1260              	 .cfi_def_cfa_register 7
 1261 0006 7860     	 str r0,[r7,#4]
 1262 0008 3960     	 str r1,[r7]
 245:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1263              	 .loc 3 245 0
 1264 000a 0F23     	 mov r3,#15
 1265 000c FB18     	 add r3,r7,r3
 1266 000e 0022     	 mov r2,#0
 1267 0010 1A70     	 strb r2,[r3]
 246:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t *data_pointer = (uint32_t*) array_data;
 1268              	 .loc 3 246 0
 1269 0012 3B68     	 ldr r3,[r7]
 1270 0014 BB60     	 str r3,[r7,#8]
 247:../Dave/Generated/CAN_NODE/can_node.c **** 
 248:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_UpdateData: lmo_ptr null", lmo_ptr != NULL);
 249:../Dave/Generated/CAN_NODE/can_node.c **** 
 250:../Dave/Generated/CAN_NODE/can_node.c ****   lmo_ptr->mo_ptr->can_data[0U] = *data_pointer;
 1271              	 .loc 3 250 0
 1272 0016 7B68     	 ldr r3,[r7,#4]
 1273 0018 1B68     	 ldr r3,[r3]
 1274 001a BA68     	 ldr r2,[r7,#8]
 1275 001c 1268     	 ldr r2,[r2]
 1276 001e 1A61     	 str r2,[r3,#16]
 251:../Dave/Generated/CAN_NODE/can_node.c ****   lmo_ptr->mo_ptr->can_data[1U] = *(data_pointer + 1U);
 1277              	 .loc 3 251 0
 1278 0020 7B68     	 ldr r3,[r7,#4]
 1279 0022 1B68     	 ldr r3,[r3]
 1280 0024 BA68     	 ldr r2,[r7,#8]
 1281 0026 5268     	 ldr r2,[r2,#4]
 1282 0028 5A61     	 str r2,[r3,#20]
 252:../Dave/Generated/CAN_NODE/can_node.c **** 
 253:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(lmo_ptr->mo_ptr);
 1283              	 .loc 3 253 0
 1284 002a 7B68     	 ldr r3,[r7,#4]
 1285 002c 1B68     	 ldr r3,[r3]
 1286 002e 0F22     	 mov r2,#15
 1287 0030 BC18     	 add r4,r7,r2
 1288 0032 181C     	 mov r0,r3
 1289 0034 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1290 0038 031C     	 mov r3,r0
 1291 003a 2370     	 strb r3,[r4]
 254:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1292              	 .loc 3 254 0
 1293 003c 0F23     	 mov r3,#15
 1294 003e FB18     	 add r3,r7,r3
 1295 0040 1B78     	 ldrb r3,[r3]
 255:../Dave/Generated/CAN_NODE/can_node.c **** }
 1296              	 .loc 3 255 0
 1297 0042 181C     	 mov r0,r3
 1298 0044 BD46     	 mov sp,r7
 1299 0046 05B0     	 add sp,sp,#20
 1300              	 
 1301 0048 90BD     	 pop {r4,r7,pc}
 1302              	 .cfi_endproc
 1303              	.LFE146:
 1305 004a C046     	 .section .text.CAN_NODE_MO_GetStatus,"ax",%progbits
 1306              	 .align 2
 1307              	 .global CAN_NODE_MO_GetStatus
 1308              	 .code 16
 1309              	 .thumb_func
 1311              	CAN_NODE_MO_GetStatus:
 1312              	.LFB147:
 256:../Dave/Generated/CAN_NODE/can_node.c **** 
 257:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to reads the status of the CAN Message Object.  */
 258:../Dave/Generated/CAN_NODE/can_node.c **** uint32_t CAN_NODE_MO_GetStatus(const CAN_NODE_LMO_t *lmo_ptr)
 259:../Dave/Generated/CAN_NODE/can_node.c **** {
 1313              	 .loc 3 259 0
 1314              	 .cfi_startproc
 1315 0000 80B5     	 push {r7,lr}
 1316              	.LCFI78:
 1317              	 .cfi_def_cfa_offset 8
 1318              	 .cfi_offset 7,-8
 1319              	 .cfi_offset 14,-4
 1320 0002 84B0     	 sub sp,sp,#16
 1321              	.LCFI79:
 1322              	 .cfi_def_cfa_offset 24
 1323 0004 00AF     	 add r7,sp,#0
 1324              	.LCFI80:
 1325              	 .cfi_def_cfa_register 7
 1326 0006 7860     	 str r0,[r7,#4]
 260:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t status;
 261:../Dave/Generated/CAN_NODE/can_node.c **** 
 262:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_GetStatus: lmo_ptr null", lmo_ptr != NULL);
 263:../Dave/Generated/CAN_NODE/can_node.c **** 
 264:../Dave/Generated/CAN_NODE/can_node.c ****   status = XMC_CAN_MO_GetStatus(lmo_ptr->mo_ptr);
 1327              	 .loc 3 264 0
 1328 0008 7B68     	 ldr r3,[r7,#4]
 1329 000a 1B68     	 ldr r3,[r3]
 1330 000c 181C     	 mov r0,r3
 1331 000e FFF7FEFF 	 bl XMC_CAN_MO_GetStatus
 1332 0012 031C     	 mov r3,r0
 1333 0014 FB60     	 str r3,[r7,#12]
 265:../Dave/Generated/CAN_NODE/can_node.c **** 
 266:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1334              	 .loc 3 266 0
 1335 0016 FB68     	 ldr r3,[r7,#12]
 267:../Dave/Generated/CAN_NODE/can_node.c **** }
 1336              	 .loc 3 267 0
 1337 0018 181C     	 mov r0,r3
 1338 001a BD46     	 mov sp,r7
 1339 001c 04B0     	 add sp,sp,#16
 1340              	 
 1341 001e 80BD     	 pop {r7,pc}
 1342              	 .cfi_endproc
 1343              	.LFE147:
 1345              	 .section .text.CAN_NODE_MO_ClearStatus,"ax",%progbits
 1346              	 .align 2
 1347              	 .global CAN_NODE_MO_ClearStatus
 1348              	 .code 16
 1349              	 .thumb_func
 1351              	CAN_NODE_MO_ClearStatus:
 1352              	.LFB148:
 268:../Dave/Generated/CAN_NODE/can_node.c **** 
 269:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to clear/ reset the status of the CAN Message Object  */
 270:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_MO_ClearStatus(const CAN_NODE_LMO_t *lmo_ptr, const uint32_t mask)
 271:../Dave/Generated/CAN_NODE/can_node.c **** {
 1353              	 .loc 3 271 0
 1354              	 .cfi_startproc
 1355 0000 80B5     	 push {r7,lr}
 1356              	.LCFI81:
 1357              	 .cfi_def_cfa_offset 8
 1358              	 .cfi_offset 7,-8
 1359              	 .cfi_offset 14,-4
 1360 0002 82B0     	 sub sp,sp,#8
 1361              	.LCFI82:
 1362              	 .cfi_def_cfa_offset 16
 1363 0004 00AF     	 add r7,sp,#0
 1364              	.LCFI83:
 1365              	 .cfi_def_cfa_register 7
 1366 0006 7860     	 str r0,[r7,#4]
 1367 0008 3960     	 str r1,[r7]
 272:../Dave/Generated/CAN_NODE/can_node.c **** 
 273:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ClearStatus: lmo_ptr null", lmo_ptr != NULL);
 274:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ClearStatus: mask invalid", (mask <= CAN_NODE_MO_CLEAR_MASK));
 275:../Dave/Generated/CAN_NODE/can_node.c **** 
 276:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_MO_ResetStatus(lmo_ptr->mo_ptr, mask);
 1368              	 .loc 3 276 0
 1369 000a 7B68     	 ldr r3,[r7,#4]
 1370 000c 1A68     	 ldr r2,[r3]
 1371 000e 3B68     	 ldr r3,[r7]
 1372 0010 101C     	 mov r0,r2
 1373 0012 191C     	 mov r1,r3
 1374 0014 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 277:../Dave/Generated/CAN_NODE/can_node.c **** 
 278:../Dave/Generated/CAN_NODE/can_node.c **** }
 1375              	 .loc 3 278 0
 1376 0018 BD46     	 mov sp,r7
 1377 001a 02B0     	 add sp,sp,#8
 1378              	 
 1379 001c 80BD     	 pop {r7,pc}
 1380              	 .cfi_endproc
 1381              	.LFE148:
 1383 001e C046     	 .section .text.CAN_NODE_DisableEvent,"ax",%progbits
 1384              	 .align 2
 1385              	 .global CAN_NODE_DisableEvent
 1386              	 .code 16
 1387              	 .thumb_func
 1389              	CAN_NODE_DisableEvent:
 1390              	.LFB149:
 279:../Dave/Generated/CAN_NODE/can_node.c **** 
 280:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to disable the node event  */
 281:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event)
 282:../Dave/Generated/CAN_NODE/can_node.c **** {
 1391              	 .loc 3 282 0
 1392              	 .cfi_startproc
 1393 0000 80B5     	 push {r7,lr}
 1394              	.LCFI84:
 1395              	 .cfi_def_cfa_offset 8
 1396              	 .cfi_offset 7,-8
 1397              	 .cfi_offset 14,-4
 1398 0002 84B0     	 sub sp,sp,#16
 1399              	.LCFI85:
 1400              	 .cfi_def_cfa_offset 24
 1401 0004 00AF     	 add r7,sp,#0
 1402              	.LCFI86:
 1403              	 .cfi_def_cfa_register 7
 1404 0006 7860     	 str r0,[r7,#4]
 1405 0008 3960     	 str r1,[r7]
 283:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1406              	 .loc 3 283 0
 1407 000a 7B68     	 ldr r3,[r7,#4]
 1408 000c 5B68     	 ldr r3,[r3,#4]
 1409 000e FB60     	 str r3,[r7,#12]
 284:../Dave/Generated/CAN_NODE/can_node.c **** 
 285:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_DisableEvent: handle null", handle != NULL);
 286:../Dave/Generated/CAN_NODE/can_node.c **** 
 287:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_DisableEvent(can_node,node_event);
 1410              	 .loc 3 287 0
 1411 0010 FA68     	 ldr r2,[r7,#12]
 1412 0012 3B68     	 ldr r3,[r7]
 1413 0014 101C     	 mov r0,r2
 1414 0016 191C     	 mov r1,r3
 1415 0018 FFF7FEFF 	 bl XMC_CAN_NODE_DisableEvent
 288:../Dave/Generated/CAN_NODE/can_node.c **** 
 289:../Dave/Generated/CAN_NODE/can_node.c **** }
 1416              	 .loc 3 289 0
 1417 001c BD46     	 mov sp,r7
 1418 001e 04B0     	 add sp,sp,#16
 1419              	 
 1420 0020 80BD     	 pop {r7,pc}
 1421              	 .cfi_endproc
 1422              	.LFE149:
 1424 0022 C046     	 .section .text.CAN_NODE_GetStatus,"ax",%progbits
 1425              	 .align 2
 1426              	 .global CAN_NODE_GetStatus
 1427              	 .code 16
 1428              	 .thumb_func
 1430              	CAN_NODE_GetStatus:
 1431              	.LFB150:
 290:../Dave/Generated/CAN_NODE/can_node.c **** 
 291:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the current status of the CAN node  */
 292:../Dave/Generated/CAN_NODE/can_node.c **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t* handle)
 293:../Dave/Generated/CAN_NODE/can_node.c **** {
 1432              	 .loc 3 293 0
 1433              	 .cfi_startproc
 1434 0000 80B5     	 push {r7,lr}
 1435              	.LCFI87:
 1436              	 .cfi_def_cfa_offset 8
 1437              	 .cfi_offset 7,-8
 1438              	 .cfi_offset 14,-4
 1439 0002 84B0     	 sub sp,sp,#16
 1440              	.LCFI88:
 1441              	 .cfi_def_cfa_offset 24
 1442 0004 00AF     	 add r7,sp,#0
 1443              	.LCFI89:
 1444              	 .cfi_def_cfa_register 7
 1445 0006 7860     	 str r0,[r7,#4]
 294:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t  status;
 295:../Dave/Generated/CAN_NODE/can_node.c **** 
 296:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_GetStatus: handle null", handle != NULL);
 297:../Dave/Generated/CAN_NODE/can_node.c **** 
 298:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1446              	 .loc 3 298 0
 1447 0008 7B68     	 ldr r3,[r7,#4]
 1448 000a 5B68     	 ldr r3,[r3,#4]
 1449 000c FB60     	 str r3,[r7,#12]
 299:../Dave/Generated/CAN_NODE/can_node.c **** 
 300:../Dave/Generated/CAN_NODE/can_node.c ****   status = XMC_CAN_NODE_GetStatus(can_node);
 1450              	 .loc 3 300 0
 1451 000e FB68     	 ldr r3,[r7,#12]
 1452 0010 181C     	 mov r0,r3
 1453 0012 FFF7FEFF 	 bl XMC_CAN_NODE_GetStatus
 1454 0016 031C     	 mov r3,r0
 1455 0018 BB60     	 str r3,[r7,#8]
 301:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1456              	 .loc 3 301 0
 1457 001a BB68     	 ldr r3,[r7,#8]
 302:../Dave/Generated/CAN_NODE/can_node.c **** }
 1458              	 .loc 3 302 0
 1459 001c 181C     	 mov r0,r3
 1460 001e BD46     	 mov sp,r7
 1461 0020 04B0     	 add sp,sp,#16
 1462              	 
 1463 0022 80BD     	 pop {r7,pc}
 1464              	 .cfi_endproc
 1465              	.LFE150:
 1467              	 .section .text.CAN_NODE_ClearStatus,"ax",%progbits
 1468              	 .align 2
 1469              	 .global CAN_NODE_ClearStatus
 1470              	 .code 16
 1471              	 .thumb_func
 1473              	CAN_NODE_ClearStatus:
 1474              	.LFB151:
 303:../Dave/Generated/CAN_NODE/can_node.c **** 
 304:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to clear the current status of the CAN node  */
 305:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status)
 306:../Dave/Generated/CAN_NODE/can_node.c **** {
 1475              	 .loc 3 306 0
 1476              	 .cfi_startproc
 1477 0000 80B5     	 push {r7,lr}
 1478              	.LCFI90:
 1479              	 .cfi_def_cfa_offset 8
 1480              	 .cfi_offset 7,-8
 1481              	 .cfi_offset 14,-4
 1482 0002 84B0     	 sub sp,sp,#16
 1483              	.LCFI91:
 1484              	 .cfi_def_cfa_offset 24
 1485 0004 00AF     	 add r7,sp,#0
 1486              	.LCFI92:
 1487              	 .cfi_def_cfa_register 7
 1488 0006 7860     	 str r0,[r7,#4]
 1489 0008 0A1C     	 mov r2,r1
 1490 000a BB1C     	 add r3,r7,#2
 1491 000c 1A80     	 strh r2,[r3]
 307:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ClearStatus: handle null", handle != NULL);
 308:../Dave/Generated/CAN_NODE/can_node.c **** 
 309:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1492              	 .loc 3 309 0
 1493 000e 7B68     	 ldr r3,[r7,#4]
 1494 0010 5B68     	 ldr r3,[r3,#4]
 1495 0012 FB60     	 str r3,[r7,#12]
 310:../Dave/Generated/CAN_NODE/can_node.c **** 
 311:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_ClearStatus(can_node, can_node_status);
 1496              	 .loc 3 311 0
 1497 0014 FA68     	 ldr r2,[r7,#12]
 1498 0016 BB1C     	 add r3,r7,#2
 1499 0018 1B88     	 ldrh r3,[r3]
 1500 001a 101C     	 mov r0,r2
 1501 001c 191C     	 mov r1,r3
 1502 001e FFF7FEFF 	 bl XMC_CAN_NODE_ClearStatus
 312:../Dave/Generated/CAN_NODE/can_node.c **** }
 1503              	 .loc 3 312 0
 1504 0022 BD46     	 mov sp,r7
 1505 0024 04B0     	 add sp,sp,#16
 1506              	 
 1507 0026 80BD     	 pop {r7,pc}
 1508              	 .cfi_endproc
 1509              	.LFE151:
 1511              	 .section .text.CAN_NODE_Init,"ax",%progbits
 1512              	 .align 2
 1513              	 .global CAN_NODE_Init
 1514              	 .code 16
 1515              	 .thumb_func
 1517              	CAN_NODE_Init:
 1518              	.LFB152:
 313:../Dave/Generated/CAN_NODE/can_node.c **** 
 314:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to initialize the CAN node by configuring the baud rate, can bus type (External or int
 315:../Dave/Generated/CAN_NODE/can_node.c ****  *  and message objects.
 316:../Dave/Generated/CAN_NODE/can_node.c ****  */
 317:../Dave/Generated/CAN_NODE/can_node.c **** 
 318:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t* handle)
 319:../Dave/Generated/CAN_NODE/can_node.c **** {
 1519              	 .loc 3 319 0
 1520              	 .cfi_startproc
 1521 0000 90B5     	 push {r4,r7,lr}
 1522              	.LCFI93:
 1523              	 .cfi_def_cfa_offset 12
 1524              	 .cfi_offset 4,-12
 1525              	 .cfi_offset 7,-8
 1526              	 .cfi_offset 14,-4
 1527 0002 87B0     	 sub sp,sp,#28
 1528              	.LCFI94:
 1529              	 .cfi_def_cfa_offset 40
 1530 0004 00AF     	 add r7,sp,#0
 1531              	.LCFI95:
 1532              	 .cfi_def_cfa_register 7
 1533 0006 7860     	 str r0,[r7,#4]
 320:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1534              	 .loc 3 320 0
 1535 0008 1723     	 mov r3,#23
 1536 000a FB18     	 add r3,r7,r3
 1537 000c 0022     	 mov r2,#0
 1538 000e 1A70     	 strb r2,[r3]
 321:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t loop_count;
 322:../Dave/Generated/CAN_NODE/can_node.c ****   const CAN_NODE_LMO_t *lmo_ptr;
 323:../Dave/Generated/CAN_NODE/can_node.c **** 
 324:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_Init: handle null", handle != NULL);
 325:../Dave/Generated/CAN_NODE/can_node.c **** 
 326:../Dave/Generated/CAN_NODE/can_node.c ****   const CAN_NODE_GPIO_t *const lgpio_ptr = handle->gpio_out;
 1539              	 .loc 3 326 0
 1540 0010 7B68     	 ldr r3,[r7,#4]
 1541 0012 9022     	 mov r2,#144
 1542 0014 9B58     	 ldr r3,[r3,r2]
 1543 0016 FB60     	 str r3,[r7,#12]
 327:../Dave/Generated/CAN_NODE/can_node.c **** 
 328:../Dave/Generated/CAN_NODE/can_node.c ****   /* Initialize the GLOBAL_CAN APP */
 329:../Dave/Generated/CAN_NODE/can_node.c ****   status  = (CAN_NODE_STATUS_t)GLOBAL_CAN_Init(handle->global_ptr);
 1544              	 .loc 3 329 0
 1545 0018 7B68     	 ldr r3,[r7,#4]
 1546 001a 1B68     	 ldr r3,[r3]
 1547 001c 1722     	 mov r2,#23
 1548 001e BC18     	 add r4,r7,r2
 1549 0020 181C     	 mov r0,r3
 1550 0022 FFF7FEFF 	 bl GLOBAL_CAN_Init
 1551 0026 031C     	 mov r3,r0
 1552 0028 2370     	 strb r3,[r4]
 330:../Dave/Generated/CAN_NODE/can_node.c **** 
 331:../Dave/Generated/CAN_NODE/can_node.c ****   if (status == CAN_NODE_STATUS_SUCCESS)
 1553              	 .loc 3 331 0
 1554 002a 1723     	 mov r3,#23
 1555 002c FB18     	 add r3,r7,r3
 1556 002e 1B78     	 ldrb r3,[r3]
 1557 0030 002B     	 cmp r3,#0
 1558 0032 00D0     	 beq .LCB1340
 1559 0034 85E0     	 b .L50
 1560              	.LCB1340:
 332:../Dave/Generated/CAN_NODE/can_node.c ****   {
 333:../Dave/Generated/CAN_NODE/can_node.c ****     /* Initialize the GUI configured values for baud rate to NBTR Reg */
 334:../Dave/Generated/CAN_NODE/can_node.c ****     if (XMC_CAN_NODE_NominalBitTimeConfigureEx(handle->node_ptr, handle->baudrate_config) == XMC_CA
 1561              	 .loc 3 334 0
 1562 0036 7B68     	 ldr r3,[r7,#4]
 1563 0038 5A68     	 ldr r2,[r3,#4]
 1564 003a 7B68     	 ldr r3,[r7,#4]
 1565 003c 9B68     	 ldr r3,[r3,#8]
 1566 003e 101C     	 mov r0,r2
 1567 0040 191C     	 mov r1,r3
 1568 0042 FFF7FEFF 	 bl XMC_CAN_NODE_NominalBitTimeConfigureEx
 1569 0046 031E     	 sub r3,r0,#0
 1570 0048 76D1     	 bne .L51
 335:../Dave/Generated/CAN_NODE/can_node.c ****     {
 336:../Dave/Generated/CAN_NODE/can_node.c ****       /* set CCE and INIT bit NCR for node configuration */
 337:../Dave/Generated/CAN_NODE/can_node.c **** 
 338:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_EnableConfigurationChange(handle->node_ptr);
 1571              	 .loc 3 338 0
 1572 004a 7B68     	 ldr r3,[r7,#4]
 1573 004c 5B68     	 ldr r3,[r3,#4]
 1574 004e 181C     	 mov r0,r3
 1575 0050 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 339:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_SetInitBit(handle->node_ptr);
 1576              	 .loc 3 339 0
 1577 0054 7B68     	 ldr r3,[r7,#4]
 1578 0056 5B68     	 ldr r3,[r3,#4]
 1579 0058 181C     	 mov r0,r3
 1580 005a FFF7FEFF 	 bl XMC_CAN_NODE_SetInitBit
 340:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_ReSetAnalyzerMode(handle->node_ptr);
 1581              	 .loc 3 340 0
 1582 005e 7B68     	 ldr r3,[r7,#4]
 1583 0060 5B68     	 ldr r3,[r3,#4]
 1584 0062 181C     	 mov r0,r3
 1585 0064 FFF7FEFF 	 bl XMC_CAN_NODE_ReSetAnalyzerMode
 341:../Dave/Generated/CAN_NODE/can_node.c **** 
 342:../Dave/Generated/CAN_NODE/can_node.c ****       if (handle->loopback_enable == true) /* Loop back mode enabled */
 1586              	 .loc 3 342 0
 1587 0068 7B68     	 ldr r3,[r7,#4]
 1588 006a A722     	 mov r2,#167
 1589 006c 9B5C     	 ldrb r3,[r3,r2]
 1590 006e 002B     	 cmp r3,#0
 1591 0070 05D0     	 beq .L52
 343:../Dave/Generated/CAN_NODE/can_node.c ****       {
 344:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_CAN_NODE_EnableLoopBack(handle->node_ptr);
 1592              	 .loc 3 344 0
 1593 0072 7B68     	 ldr r3,[r7,#4]
 1594 0074 5B68     	 ldr r3,[r3,#4]
 1595 0076 181C     	 mov r0,r3
 1596 0078 FFF7FEFF 	 bl XMC_CAN_NODE_EnableLoopBack
 1597 007c 16E0     	 b .L53
 1598              	.L52:
 345:../Dave/Generated/CAN_NODE/can_node.c ****       }
 346:../Dave/Generated/CAN_NODE/can_node.c ****       else
 347:../Dave/Generated/CAN_NODE/can_node.c ****       {
 348:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_GPIO_Init(handle->gpio_in->port, handle->gpio_in->pin, handle->gpio_in_config);
 1599              	 .loc 3 348 0
 1600 007e 7B68     	 ldr r3,[r7,#4]
 1601 0080 9822     	 mov r2,#152
 1602 0082 9B58     	 ldr r3,[r3,r2]
 1603 0084 1868     	 ldr r0,[r3]
 1604 0086 7B68     	 ldr r3,[r7,#4]
 1605 0088 9822     	 mov r2,#152
 1606 008a 9B58     	 ldr r3,[r3,r2]
 1607 008c 1979     	 ldrb r1,[r3,#4]
 1608 008e 7B68     	 ldr r3,[r7,#4]
 1609 0090 9C22     	 mov r2,#156
 1610 0092 9B58     	 ldr r3,[r3,r2]
 1611 0094 1A1C     	 mov r2,r3
 1612 0096 FFF7FEFF 	 bl XMC_GPIO_Init
 349:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_CAN_NODE_SetReceiveInput(handle->node_ptr, handle->rx_signal);
 1613              	 .loc 3 349 0
 1614 009a 7B68     	 ldr r3,[r7,#4]
 1615 009c 5968     	 ldr r1,[r3,#4]
 1616 009e 7B68     	 ldr r3,[r7,#4]
 1617 00a0 A022     	 mov r2,#160
 1618 00a2 9B5C     	 ldrb r3,[r3,r2]
 1619 00a4 081C     	 mov r0,r1
 1620 00a6 191C     	 mov r1,r3
 1621 00a8 FFF7FEFF 	 bl XMC_CAN_NODE_SetReceiveInput
 1622              	.L53:
 350:../Dave/Generated/CAN_NODE/can_node.c ****       }
 351:../Dave/Generated/CAN_NODE/can_node.c ****       CAN_NODE_SetNodeEvents(handle); /* API to enable node events */
 1623              	 .loc 3 351 0
 1624 00ac 7B68     	 ldr r3,[r7,#4]
 1625 00ae 181C     	 mov r0,r3
 1626 00b0 FFF7FEFF 	 bl CAN_NODE_SetNodeEvents
 352:../Dave/Generated/CAN_NODE/can_node.c **** 
 353:../Dave/Generated/CAN_NODE/can_node.c ****       for (loop_count = 0U; loop_count < handle->mo_count; loop_count++)
 1627              	 .loc 3 353 0
 1628 00b4 0023     	 mov r3,#0
 1629 00b6 3B61     	 str r3,[r7,#16]
 1630 00b8 1AE0     	 b .L54
 1631              	.L55:
 354:../Dave/Generated/CAN_NODE/can_node.c ****       {
 355:../Dave/Generated/CAN_NODE/can_node.c ****         lmo_ptr = handle->lmobj_ptr[loop_count];
 1632              	 .loc 3 355 0 discriminator 3
 1633 00ba 7A68     	 ldr r2,[r7,#4]
 1634 00bc 3B69     	 ldr r3,[r7,#16]
 1635 00be 0233     	 add r3,r3,#2
 1636 00c0 9B00     	 lsl r3,r3,#2
 1637 00c2 D318     	 add r3,r2,r3
 1638 00c4 5B68     	 ldr r3,[r3,#4]
 1639 00c6 BB60     	 str r3,[r7,#8]
 356:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_CAN_AllocateMOtoNodeList(handle->global_ptr->canglobal_ptr, handle->node_num, lmo_ptr->
 1640              	 .loc 3 356 0 discriminator 3
 1641 00c8 7B68     	 ldr r3,[r7,#4]
 1642 00ca 1B68     	 ldr r3,[r3]
 1643 00cc 5968     	 ldr r1,[r3,#4]
 1644 00ce 7B68     	 ldr r3,[r7,#4]
 1645 00d0 A122     	 mov r2,#161
 1646 00d2 9A5C     	 ldrb r2,[r3,r2]
 1647 00d4 BB68     	 ldr r3,[r7,#8]
 1648 00d6 1B79     	 ldrb r3,[r3,#4]
 1649 00d8 081C     	 mov r0,r1
 1650 00da 111C     	 mov r1,r2
 1651 00dc 1A1C     	 mov r2,r3
 1652 00de FFF7FEFF 	 bl XMC_CAN_AllocateMOtoNodeList
 357:../Dave/Generated/CAN_NODE/can_node.c ****         CAN_NODE_MO_Init(lmo_ptr);
 1653              	 .loc 3 357 0 discriminator 3
 1654 00e2 BB68     	 ldr r3,[r7,#8]
 1655 00e4 181C     	 mov r0,r3
 1656 00e6 FFF7FEFF 	 bl CAN_NODE_MO_Init
 353:../Dave/Generated/CAN_NODE/can_node.c ****       {
 1657              	 .loc 3 353 0 discriminator 3
 1658 00ea 3B69     	 ldr r3,[r7,#16]
 1659 00ec 0133     	 add r3,r3,#1
 1660 00ee 3B61     	 str r3,[r7,#16]
 1661              	.L54:
 353:../Dave/Generated/CAN_NODE/can_node.c ****       {
 1662              	 .loc 3 353 0 is_stmt 0 discriminator 1
 1663 00f0 7B68     	 ldr r3,[r7,#4]
 1664 00f2 A222     	 mov r2,#162
 1665 00f4 9B5C     	 ldrb r3,[r3,r2]
 1666 00f6 1A1E     	 sub r2,r3,#0
 1667 00f8 3B69     	 ldr r3,[r7,#16]
 1668 00fa 9A42     	 cmp r2,r3
 1669 00fc DDD8     	 bhi .L55
 358:../Dave/Generated/CAN_NODE/can_node.c ****       }
 359:../Dave/Generated/CAN_NODE/can_node.c ****       /* reset CCE and INIT bit NCR for node configuration */
 360:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_DisableConfigurationChange(handle->node_ptr);
 1670              	 .loc 3 360 0 is_stmt 1
 1671 00fe 7B68     	 ldr r3,[r7,#4]
 1672 0100 5B68     	 ldr r3,[r3,#4]
 1673 0102 181C     	 mov r0,r3
 1674 0104 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 361:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_ResetInitBit(handle->node_ptr);
 1675              	 .loc 3 361 0
 1676 0108 7B68     	 ldr r3,[r7,#4]
 1677 010a 5B68     	 ldr r3,[r3,#4]
 1678 010c 181C     	 mov r0,r3
 1679 010e FFF7FEFF 	 bl XMC_CAN_NODE_ResetInitBit
 362:../Dave/Generated/CAN_NODE/can_node.c ****       if (handle->loopback_enable == false)
 1680              	 .loc 3 362 0
 1681 0112 7B68     	 ldr r3,[r7,#4]
 1682 0114 A722     	 mov r2,#167
 1683 0116 9B5C     	 ldrb r3,[r3,r2]
 1684 0118 0122     	 mov r2,#1
 1685 011a 5340     	 eor r3,r2
 1686 011c DBB2     	 uxtb r3,r3
 1687 011e 002B     	 cmp r3,#0
 1688 0120 13D0     	 beq .L58
 363:../Dave/Generated/CAN_NODE/can_node.c ****       {
 364:../Dave/Generated/CAN_NODE/can_node.c ****         /* CAN transmit pin configuration */
 365:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_GPIO_Init(lgpio_ptr->port, lgpio_ptr->pin, handle->gpio_out_config);
 1689              	 .loc 3 365 0
 1690 0122 FB68     	 ldr r3,[r7,#12]
 1691 0124 1868     	 ldr r0,[r3]
 1692 0126 FB68     	 ldr r3,[r7,#12]
 1693 0128 1979     	 ldrb r1,[r3,#4]
 1694 012a 7B68     	 ldr r3,[r7,#4]
 1695 012c 9422     	 mov r2,#148
 1696 012e 9B58     	 ldr r3,[r3,r2]
 1697 0130 1A1C     	 mov r2,r3
 1698 0132 FFF7FEFF 	 bl XMC_GPIO_Init
 1699 0136 08E0     	 b .L58
 1700              	.L51:
 366:../Dave/Generated/CAN_NODE/can_node.c ****       }
 367:../Dave/Generated/CAN_NODE/can_node.c ****     }
 368:../Dave/Generated/CAN_NODE/can_node.c ****     else
 369:../Dave/Generated/CAN_NODE/can_node.c ****     {
 370:../Dave/Generated/CAN_NODE/can_node.c ****       status = CAN_NODE_STATUS_FAILURE;
 1701              	 .loc 3 370 0
 1702 0138 1723     	 mov r3,#23
 1703 013a FB18     	 add r3,r7,r3
 1704 013c 0122     	 mov r2,#1
 1705 013e 1A70     	 strb r2,[r3]
 1706 0140 03E0     	 b .L58
 1707              	.L50:
 371:../Dave/Generated/CAN_NODE/can_node.c ****     }
 372:../Dave/Generated/CAN_NODE/can_node.c ****   }
 373:../Dave/Generated/CAN_NODE/can_node.c ****   else
 374:../Dave/Generated/CAN_NODE/can_node.c ****   {
 375:../Dave/Generated/CAN_NODE/can_node.c ****     status = CAN_NODE_STATUS_FAILURE;
 1708              	 .loc 3 375 0
 1709 0142 1723     	 mov r3,#23
 1710 0144 FB18     	 add r3,r7,r3
 1711 0146 0122     	 mov r2,#1
 1712 0148 1A70     	 strb r2,[r3]
 1713              	.L58:
 376:../Dave/Generated/CAN_NODE/can_node.c ****   }
 377:../Dave/Generated/CAN_NODE/can_node.c **** 
 378:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1714              	 .loc 3 378 0
 1715 014a 1723     	 mov r3,#23
 1716 014c FB18     	 add r3,r7,r3
 1717 014e 1B78     	 ldrb r3,[r3]
 379:../Dave/Generated/CAN_NODE/can_node.c **** }
 1718              	 .loc 3 379 0
 1719 0150 181C     	 mov r0,r3
 1720 0152 BD46     	 mov sp,r7
 1721 0154 07B0     	 add sp,sp,#28
 1722              	 
 1723 0156 90BD     	 pop {r4,r7,pc}
 1724              	 .cfi_endproc
 1725              	.LFE152:
 1727              	 .text
 1728              	.Letext0:
 1729              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1730              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1731              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1732              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc/xmc_gpio.h"
 1733              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/XMCLib/inc/xmc1_gpio.h"
 1734              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Dave/Generated/DAVE_Common.h"
 1735              	 .file 10 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Dave/Generated/GLOBAL_CAN/global_can.h"
 1736              	 .file 11 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/CMSIS/Include/cmsis_gcc.h"
 1737              	 .file 12 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/xmc_rtos_serial/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 can_node.c
    {standard input}:18     .text.XMC_CAN_NODE_SetEventNodePointer:00000000 $t
    {standard input}:22     .text.XMC_CAN_NODE_SetEventNodePointer:00000000 XMC_CAN_NODE_SetEventNodePointer
    {standard input}:73     .text.XMC_CAN_NODE_SetReceiveInput:00000000 $t
    {standard input}:77     .text.XMC_CAN_NODE_SetReceiveInput:00000000 XMC_CAN_NODE_SetReceiveInput
    {standard input}:120    .text.XMC_CAN_NODE_EnableLoopBack:00000000 $t
    {standard input}:124    .text.XMC_CAN_NODE_EnableLoopBack:00000000 XMC_CAN_NODE_EnableLoopBack
    {standard input}:157    .text.XMC_CAN_NODE_GetStatus:00000000 $t
    {standard input}:161    .text.XMC_CAN_NODE_GetStatus:00000000 XMC_CAN_NODE_GetStatus
    {standard input}:190    .text.XMC_CAN_NODE_ClearStatus:00000000 $t
    {standard input}:194    .text.XMC_CAN_NODE_ClearStatus:00000000 XMC_CAN_NODE_ClearStatus
    {standard input}:231    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:235    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:267    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:271    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:304    .text.XMC_CAN_NODE_SetInitBit:00000000 $t
    {standard input}:308    .text.XMC_CAN_NODE_SetInitBit:00000000 XMC_CAN_NODE_SetInitBit
    {standard input}:340    .text.XMC_CAN_NODE_ResetInitBit:00000000 $t
    {standard input}:344    .text.XMC_CAN_NODE_ResetInitBit:00000000 XMC_CAN_NODE_ResetInitBit
    {standard input}:377    .text.XMC_CAN_NODE_ReSetAnalyzerMode:00000000 $t
    {standard input}:381    .text.XMC_CAN_NODE_ReSetAnalyzerMode:00000000 XMC_CAN_NODE_ReSetAnalyzerMode
    {standard input}:414    .text.XMC_CAN_MO_SetEventNodePointer:00000000 $t
    {standard input}:418    .text.XMC_CAN_MO_SetEventNodePointer:00000000 XMC_CAN_MO_SetEventNodePointer
    {standard input}:472    .text.XMC_CAN_MO_GetStatus:00000000 $t
    {standard input}:476    .text.XMC_CAN_MO_GetStatus:00000000 XMC_CAN_MO_GetStatus
    {standard input}:506    .text.XMC_CAN_MO_ResetStatus:00000000 $t
    {standard input}:510    .text.XMC_CAN_MO_ResetStatus:00000000 XMC_CAN_MO_ResetStatus
    {standard input}:541    .text.XMC_CAN_MO_EnableEvent:00000000 $t
    {standard input}:545    .text.XMC_CAN_MO_EnableEvent:00000000 XMC_CAN_MO_EnableEvent
    {standard input}:580    .text.CAN_NODE_MO_EnableTxEvent:00000000 $t
    {standard input}:584    .text.CAN_NODE_MO_EnableTxEvent:00000000 CAN_NODE_MO_EnableTxEvent
    {standard input}:618    .text.CAN_NODE_MO_EnableRxEvent:00000000 $t
    {standard input}:622    .text.CAN_NODE_MO_EnableRxEvent:00000000 CAN_NODE_MO_EnableRxEvent
    {standard input}:655    .text.CAN_NODE_SetNodeEvents:00000000 $t
    {standard input}:659    .text.CAN_NODE_SetNodeEvents:00000000 CAN_NODE_SetNodeEvents
    {standard input}:754    .text.CAN_NODE_SetNodePointer:00000000 CAN_NODE_SetNodePointer
    {standard input}:750    .text.CAN_NODE_SetNodePointer:00000000 $t
    {standard input}:831    .text.CAN_NODE_GetAppVersion:00000000 $t
    {standard input}:836    .text.CAN_NODE_GetAppVersion:00000000 CAN_NODE_GetAppVersion
    {standard input}:901    .text.CAN_NODE_GetAppVersion:00000058 $d
    {standard input}:907    .text.CAN_NODE_EnableEvent:00000000 $t
    {standard input}:912    .text.CAN_NODE_EnableEvent:00000000 CAN_NODE_EnableEvent
    {standard input}:948    .text.CAN_NODE_ConfigBaudrate:00000000 $t
    {standard input}:953    .text.CAN_NODE_ConfigBaudrate:00000000 CAN_NODE_ConfigBaudrate
    {standard input}:1017   .text.CAN_NODE_MO_Init:00000000 $t
    {standard input}:1022   .text.CAN_NODE_MO_Init:00000000 CAN_NODE_MO_Init
    {standard input}:1090   .text.CAN_NODE_MO_Transmit:00000000 $t
    {standard input}:1095   .text.CAN_NODE_MO_Transmit:00000000 CAN_NODE_MO_Transmit
    {standard input}:1140   .text.CAN_NODE_MO_Receive:00000000 $t
    {standard input}:1145   .text.CAN_NODE_MO_Receive:00000000 CAN_NODE_MO_Receive
    {standard input}:1190   .text.CAN_NODE_MO_ReceiveData:00000000 $t
    {standard input}:1195   .text.CAN_NODE_MO_ReceiveData:00000000 CAN_NODE_MO_ReceiveData
    {standard input}:1240   .text.CAN_NODE_MO_UpdateData:00000000 $t
    {standard input}:1245   .text.CAN_NODE_MO_UpdateData:00000000 CAN_NODE_MO_UpdateData
    {standard input}:1306   .text.CAN_NODE_MO_GetStatus:00000000 $t
    {standard input}:1311   .text.CAN_NODE_MO_GetStatus:00000000 CAN_NODE_MO_GetStatus
    {standard input}:1346   .text.CAN_NODE_MO_ClearStatus:00000000 $t
    {standard input}:1351   .text.CAN_NODE_MO_ClearStatus:00000000 CAN_NODE_MO_ClearStatus
    {standard input}:1384   .text.CAN_NODE_DisableEvent:00000000 $t
    {standard input}:1389   .text.CAN_NODE_DisableEvent:00000000 CAN_NODE_DisableEvent
    {standard input}:1425   .text.CAN_NODE_GetStatus:00000000 $t
    {standard input}:1430   .text.CAN_NODE_GetStatus:00000000 CAN_NODE_GetStatus
    {standard input}:1468   .text.CAN_NODE_ClearStatus:00000000 $t
    {standard input}:1473   .text.CAN_NODE_ClearStatus:00000000 CAN_NODE_ClearStatus
    {standard input}:1512   .text.CAN_NODE_Init:00000000 $t
    {standard input}:1517   .text.CAN_NODE_Init:00000000 CAN_NODE_Init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CAN_NODE_EnableEvent
XMC_CAN_NODE_NominalBitTimeConfigure
XMC_CAN_MO_Config
XMC_CAN_MO_Transmit
XMC_CAN_MO_Receive
XMC_CAN_MO_ReceiveData
XMC_CAN_MO_UpdateData
XMC_CAN_NODE_DisableEvent
GLOBAL_CAN_Init
XMC_CAN_NODE_NominalBitTimeConfigureEx
XMC_GPIO_Init
XMC_CAN_AllocateMOtoNodeList
